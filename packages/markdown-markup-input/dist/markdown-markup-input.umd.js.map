{"version":3,"sources":["webpack://markdown-markup-input/webpack/universalModuleDefinition","webpack://markdown-markup-input/webpack/bootstrap","webpack://markdown-markup-input/./node_modules/markdown-it/lib/common/utils.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_iter-define.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_has.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/index.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/token.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_object-keys.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_object-dps.js","webpack://markdown-markup-input/./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_to-primitive.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/presets/zero.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_dom-create.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_dom-create.js","webpack://markdown-markup-input/./node_modules/css-loader/lib/css-base.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_fails.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_redefine.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_object-create.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_wks.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_library.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_cof.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_hide.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_core/block.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_hide.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_object-gpo.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_iter-create.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://markdown-markup-input/./node_modules/mdurl/format.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://markdown-markup-input/./node_modules/core-js/library/fn/object/define-property.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_to-integer.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_property-desc.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/es6.object.define-property.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/ruler.js","webpack://markdown-markup-input/./node_modules/vue-style-loader/lib/listToStyles.js","webpack://markdown-markup-input/./node_modules/vue-style-loader/lib/addStylesClient.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/list.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_to-object.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/parser_inline.js","webpack://markdown-markup-input/./node_modules/uc.micro/categories/Z/regex.js","webpack://markdown-markup-input/./node_modules/markdown-it-abbr/index.js","webpack://markdown-markup-input/./node_modules/markdown-it-sub/index.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_shared.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/helpers/index.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/common/html_re.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_core.js","webpack://markdown-markup-input/./src/App.vue?64cf","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_export.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_shared-key.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_iobject.js","webpack://markdown-markup-input/(webpack)/buildin/module.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_export.js","webpack://markdown-markup-input/./node_modules/diff-match-patch/index.js","webpack://markdown-markup-input/./src/App.vue?1239","webpack://markdown-markup-input/./node_modules/core-js/modules/_to-iobject.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_has.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_to-primitive.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://markdown-markup-input/./node_modules/uc.micro/categories/Cf/regex.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/parser_block.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_global.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_to-absolute-index.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_a-function.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_fails.js","webpack://markdown-markup-input/./node_modules/markdown-it-sup/index.js","webpack://markdown-markup-input/./src/App.vue?88d3","webpack://markdown-markup-input/./node_modules/uc.micro/categories/P/regex.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/renderer.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_set-to-string-tag.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/table.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_core.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_iterators.js","webpack://markdown-markup-input/./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_object-dp.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/presets/default.js","webpack://markdown-markup-input/external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_descriptors.js","webpack://markdown-markup-input/./node_modules/mdurl/decode.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_ctx.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/code.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_add-to-unscopables.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_to-length.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_descriptors.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://markdown-markup-input/./node_modules/uc.micro/categories/Cc/regex.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/parser_core.js","webpack://markdown-markup-input/./node_modules/core-js/modules/web.dom.iterable.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_property-desc.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://markdown-markup-input/./node_modules/linkify-it/lib/re.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/common/entities.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_defined.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://markdown-markup-input/./node_modules/prismjs/prism.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_array-includes.js","webpack://markdown-markup-input/./node_modules/mdurl/encode.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_ie8-dom-define.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://markdown-markup-input/(webpack)/buildin/global.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_uid.js","webpack://markdown-markup-input/./node_modules/core-js/modules/es6.array.iterator.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_an-object.js","webpack://markdown-markup-input/./node_modules/uc.micro/properties/Any/regex.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_object-keys-internal.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_is-object.js","webpack://markdown-markup-input/./node_modules/markdown-it/index.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_iter-step.js","webpack://markdown-markup-input/./node_modules/uc.micro/index.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_ctx.js","webpack://markdown-markup-input/./node_modules/mdurl/index.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_a-function.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_object-dp.js","webpack://markdown-markup-input/./node_modules/mdurl/parse.js","webpack://markdown-markup-input/./src/less/prism.css","webpack://markdown-markup-input/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_enum-bug-keys.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_an-object.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_global.js","webpack://markdown-markup-input/./node_modules/markdown-it-footnote/index.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://markdown-markup-input/./node_modules/core-js/library/modules/_is-object.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_function-to-string.js","webpack://markdown-markup-input/./node_modules/core-js/modules/_html.js","webpack://markdown-markup-input/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://markdown-markup-input/./src/App.vue?6f5a","webpack://markdown-markup-input/./src/services/extensionSvc.js","webpack://markdown-markup-input/./src/extensions/markdownExtension.js","webpack://markdown-markup-input/./src/extensions/index.js","webpack://markdown-markup-input/./src/libs/clunderscore.js","webpack://markdown-markup-input/./src/libs/cleditCore.js","webpack://markdown-markup-input/./src/libs/cleditHighlighter.js","webpack://markdown-markup-input/./src/libs/cleditKeystroke.js","webpack://markdown-markup-input/./src/libs/cleditSelectionMgr.js","webpack://markdown-markup-input/./src/libs/cleditUndoMgr.js","webpack://markdown-markup-input/./src/libs/cleditUtils.js","webpack://markdown-markup-input/./src/libs/cleditWatcher.js","webpack://markdown-markup-input/./src/libs/cledit.js","webpack://markdown-markup-input/./src/services/optional/keystrokes.js","webpack://markdown-markup-input/./src/services/optional/index.js","webpack://markdown-markup-input/./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack://markdown-markup-input/./src/libs/htmlSanitizer.js","webpack://markdown-markup-input/./src/services/markdownConversionSvc.js","webpack://markdown-markup-input/./src/services/markdownGrammarSvc.js","webpack://markdown-markup-input/./src/services/editorSvc.js","webpack://markdown-markup-input/src/App.vue","webpack://markdown-markup-input/./src/App.vue?a7d1","webpack://markdown-markup-input/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://markdown-markup-input/./src/App.vue","webpack://markdown-markup-input/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js","webpack://markdown-markup-input/./node_modules/linkify-it/index.js","webpack://markdown-markup-input/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://markdown-markup-input/./node_modules/markdown-it-deflist/index.js"],"names":["initConverterListeners","onInitConverter","priority","listener","initConverter","markdown","options","forEach","coreBaseRules","blockBaseRules","inlineBaseRules","inlineBaseRules2","extensionSvc","set","html","breaks","linkify","typographer","langPrefix","core","ruler","enable","blockRules","slice","fence","splice","indexOf","table","block","inlineRules","inlineRules2","del","inline","ruler2","abbr","use","markdownitAbbr","deflist","markdownitDeflist","footnote","markdownitFootnote","sub","markdownitSub","sup","markdownitSup","before","state","anchorHash","headingOpenToken","headingContent","tokens","token","type","slug","replace","toLowerCase","i","length","charCode","charCodeAt","anchor","index","Object","prototype","hasOwnProperty","call","headingAnchor","attrs","undefined","children","reduce","result","child","content","renderer","rules","table_open","idx","opts","renderToken","table_close","textAlignLength","td_open","th_open","footnote_ref","n","Number","meta","id","subId","arrayProperties","liveCollectionProperties","functionProperties","objectProperties","Array","cl_each","cb","cl_map","cl_reduce","memo","cl_some","cl_filter","push","cl_bind","context","self","args","arguments","apply","concat","keys","cl_extend","obj","build","properties","value","key","defineProperties","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Function","window","HTMLCollection","NodeList","DiffMatchPatch","require","cledit","contentElt","editor","$contentElt","$window","$keystrokes","$document","document","Utils","createEventHooks","toggleEditable","isEditable","contentEditable","getTextContent","textContent","lastTextContent","highlighter","Highlighter","sectionList","parseSections","isInit","watcher","Watcher","checkContentChange","startWatching","diffMatchPatch","selectionMgr","SelectionMgr","adjustCursorPosition","force","saveSelectionState","replaceContent","selectionStart","selectionEnd","replacement","min","Math","max","range","createRange","rangeText","deleteContents","insertNode","createTextNode","ignoreUndo","setContent","noUndo","maxStartOffset","startOffset","diff_commonPrefix","endOffset","diff_commonSuffix","substring","start","end","setSelectionStartEnd","focus","restoreSelection","undoMgr","UndoMgr","mutations","noWatch","removedSections","modifiedSections","markModifiedSection","node","section","array","parentNode","mutation","target","addedNodes","removedNodes","newTextContent","diffs","diff_main","$trigger","addDiffs","saveState","setSelection","keydownHandler","handler","evt","which","tryDestroy","contains","stopWatching","removeEventListener","windowKeydownListener","windowMouseListener","addEventListener","after","selection","isBackwardSelection","keystroke","preventDefault","data","clipboardData","getData","addKeystroke","keystrokes","isArray","sort","keystroke1","keystroke2","defaultKeystrokes","getContent","init","sectionHighlighter","text","sectionDelimiter","toString","styleElts","createStyleSheet","styleElt","createElement","head","appendChild","insertBeforeSection","useBr","isWebkit","trailingNodeTag","hiddenLfInnerHtml","lfHtml","addTrailingNode","trailingNode","Section","setElement","elt","newSectionList","sectionParser","sectionText","sectionsToRemove","leftIndex","newSection","forceHighlighting","rightIndex","reverse","leftSections","rightSections","newSectionEltList","createDocumentFragment","highlight","innerHTML","removeChild","insertBefore","childNode","firstChild","nextNode","nextSibling","hasFocus","sectionElt","Keystroke","clearNewline","charTypes","create","split","wordSeparator","getNextWordOffset","offset","isBackward","previousType","currentType","ctrlKey","metaKey","altKey","keyCode","keyCodeChar","String","fromCharCode","action","shiftKey","setTimeout","strSplice","str","remove","add","isInverse","lf","lastIndexOf","test","charAt","previousLine","indent","match","isJump","isMac","cursorCoordinates","findContainer","container","nodeValue","hdLfElt","className","previousSibling","tagName","offsetInContainer","childNodes","isNaN","setStart","setEnd","activeElement","selectionRange","commonAncestorContainer","getSelection","removeAllRanges","extend","beginRange","cloneRange","collapse","addRange","startContainer","endContainer","getClosestAncestorIn","ancestor","selfIsAncestor","p","getNodeIndex","comparePoints","nodeA","offsetA","nodeB","offsetB","nodeC","save","rangeCount","getRangeAt","compareDocumentPosition","Node","DOCUMENT_POSITION_CONTAINED_BY","selectionText","brElt","anchorNode","anchorOffset","focusNode","focusOffset","undoStack","redoStack","currentState","previousPatches","currentPatches","debounce","undoStackMaxSize","bufferStateUntilIdle","patchHandler","makePatches","oldContent","newContent","patch_make","applyPatches","patches","patch_apply","reversePatches","patch_deepCopy","patch","diff","State","StateMgr","currentTime","lastTime","isBufferState","Date","now","addToStack","stack","addToUndoStack","addToRedoStack","stateMgr","saveCurrentPatches","shift","restoreState","isForward","newContentText","undo","pop","redo","isGecko","documentElement","style","isMsie","navigator","userAgent","defer","queue","queueLength","flush","e","console","error","message","iterations","observer","MutationObserver","observe","characterData","fn","func","wait","timeoutId","isExpected","clearTimeout","object","listenerMap","eventType","listeners","on","off","containerOffset","len","nodeType","lastChild","isWatching","contentObserver","childList","subtree","disconnect","indentRegexp","lastSelection","fixNumberedList","spaceIndent","indentRegex","RegExp","getHits","lines","hits","pendingHits","hasHit","hasNoIndent","some","line","wholeMatch","formatHits","num","map","hit","parseInt","unshift","currentLine","currentPos","join","enterKeyHandler","lastLf","lastLine","indentMatch","tabKeyHandler","previousChar","aHrefSanitizationWhitelist","imgSrcSanitizationWhitelist","urlParsingNode","sanitizeUri","uri","isImage","regex","setAttribute","normalizedVal","href","htmlSectionMarker","languageAliases","js","json","svg","xml","py","rb","yml","ps1","psm1","entries","alias","language","Prism","languages","insideFences","name","util","pattern","inside","rest","noSpellcheckTokens","hooks","env","attributes","spellcheck","createFlagMap","arr","startSectionBlockTypeMap","listBlockTypeMap","blockquoteBlockTypeMap","tableBlockTypeMap","deflistBlockTypeMap","defaultOptions","math","markdownConversionSvc","createConverter","converter","MarkdownIt","rule","markdownState","markdownCoreRules","getRules","parsingCtx","sections","addSection","maxLine","level","charInsideUrl","charEndingUrl","urlPattern","emailPattern","markup","comment","tag","punctuation","namespace","entity","latex","keyword","lparen","rparen","makeGrammars","grammars","main","list","blockquote","term","cl","hr","defs","fndef","abbrdef","linkdef","url","def","pre","code","inlinefn","img","lookbehind","link","imgref","linkref","email","strong","em","c","restLight","grammar","editorSvcFun","assign","Vue","editorElt","clEditor","prismGrammars","initPrism","markdownGrammarSvc","initClEditor","getElementsByClassName","imgTokenElt","srcElt","querySelector","imgElt","display","htmlSanitizer","onload","src","sizeElt","width","height","imgTokenWrapper","$emit"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;AClFA;AACA;AACa;;;AAGb,sBAAsB,4CAA4C;;AAElE,wBAAwB,0CAA0C;;AAElE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,QAAQ;;AAE1B;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA,mCAAmC,cAAc;AACjD,2DAA2D,cAAc;AACzE;AACA,+BAA+B,cAAc;AAC7C,mBAAmB,cAAc;AACjC,+BAA+B,cAAc;AAC7C,+BAA+B,cAAc;AAC7C;AACA,qBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,8CAA8C,cAAc,EAAE;AAC9D,wCAAwC,KAAK,EAAE;AAC/C;;AAEA,8CAA8C,IAAI,OAAO,IAAI;;AAE7D,eAAe,mBAAO,CAAC,MAAY;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,YAAY;;AAEzC;AACA,CAAC;;AAED;AACA,8BAA8B,YAAY;AAC1C;AACA;;AAEA;AACA,sDAAsD,YAAY;;AAElE;AACA,kBAAkB,gBAAgB;AAClC;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAwC;;AAExC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,mBAAO,CAAC,MAA6B;;AAE5D;AACA;AACA;AACA;;;AAGA;AACA;AACA,oDAAoD,oCAAoC,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,2BAA2B,GAAG,EAAE,MAAM,KAAK;AACrD,UAAU,yBAAyB,GAAG,EAAE,MAAM,IAAI,MAAM;AACxD,UAAU,mBAAmB,GAAG,EAAE,EAAE,iBAAiB,EAAE,iCAAiC,MAAM;AAC9F,UAAU,2BAA2B,GAAG,EAAE,EAAE,iBAAiB,KAAK;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAO,CAAC,MAAO;AAC7C,8BAA8B,mBAAO,CAAC,MAAU;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5Ta;AACb,cAAc,mBAAO,CAAC,MAAY;AAClC,cAAc,mBAAO,CAAC,MAAW;AACjC,eAAe,mBAAO,CAAC,MAAa;AACpC,WAAW,mBAAO,CAAC,MAAS;AAC5B,gBAAgB,mBAAO,CAAC,MAAc;AACtC,kBAAkB,mBAAO,CAAC,MAAgB;AAC1C,qBAAqB,mBAAO,CAAC,MAAsB;AACnD,qBAAqB,mBAAO,CAAC,MAAe;AAC5C,eAAe,mBAAO,CAAC,MAAQ;AAC/B,8CAA8C;AAC9C;AACA;AACA;;AAEA,8BAA8B,aAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,oCAAoC;AAC7E,6CAA6C,oCAAoC;AACjF,KAAK,4BAA4B,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;ACpEA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,MAAiB;;;AAGvC;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,cAAc;;AAErE;;AAEA,yCAAyC,cAAc;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,cAAc;;AAE/D,eAAe,aAAa;;AAE5B;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtDA,uBAAuB;AACvB;AACA;AACA;;;;;;;;;ACHA;;AAEa;;;AAGb,mBAAmB,mBAAO,CAAC,MAAgB;AAC3C,mBAAmB,mBAAO,CAAC,MAAW;AACtC,mBAAmB,mBAAO,CAAC,MAAY;AACvC,mBAAmB,mBAAO,CAAC,MAAe;AAC1C,mBAAmB,mBAAO,CAAC,MAAgB;AAC3C,mBAAmB,mBAAO,CAAC,MAAiB;AAC5C,mBAAmB,mBAAO,CAAC,MAAY;AACvC,mBAAmB,mBAAO,CAAC,MAAO;AAClC,mBAAmB,mBAAO,CAAC,MAAU;;;AAGrC;AACA,aAAa,mBAAO,CAAC,MAAmB;AACxC,QAAQ,mBAAO,CAAC,MAAgB;AAChC,cAAc,mBAAO,CAAC,MAAsB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;;AAErD;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,aAAa;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,aAAa;AACpB;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB;AACjB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;;AAGhC;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gFAAgF;AACnG;;AAEA,iBAAiB,gEAAgE;;AAEjF,wBAAwB,2BAA2B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,iBAAiB;;AAE9C;AACA;AACA,GAAG;;AAEH;;AAEA,4CAA4C,iCAAiC,EAAE;;AAE/E;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,iBAAiB;;AAE9C;AACA;AACA,GAAG;;AAEH;;AAEA,4CAA4C,iCAAiC,EAAE;;AAE/E;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;ACpkBA;;AAEa;;;AAGb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,WAAW;;AAE/B;;AAEA,iCAAiC,SAAS;AAC1C,+BAA+B,UAAU;AACzC;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;;;;;;;;;ACpMA;;AAEa;;;AAGb,qBAAqB,mBAAO,CAAC,MAAU;AACvC,qBAAqB,mBAAO,CAAC,MAAiB;AAC9C,qBAAqB,mBAAO,CAAC,MAAiB;AAC9C,qBAAqB,mBAAO,CAAC,MAAiB;;;AAG9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB,aAAa;AAClD;;AAEA,uBAAuB;AACvB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gCAAgC;AAChC;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4DAA4D,OAAO;;AAEnE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;;;;;;;;ACjIA;AACA,YAAY,mBAAO,CAAC,MAAyB;AAC7C,kBAAkB,mBAAO,CAAC,MAAkB;;AAE5C;AACA;AACA;;;;;;;;ACNA,SAAS,mBAAO,CAAC,MAAc;AAC/B,eAAe,mBAAO,CAAC,MAAc;AACrC,cAAc,mBAAO,CAAC,MAAgB;;AAEtC,iBAAiB,mBAAO,CAAC,MAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA,CAAC;;AAED;AACA,mBAAmB,KAA0B;AAC7C;AACA,kBAAkB,KAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB,yCAAyC,qBAAqB;;AAE9D;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;;AAEtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,IAEU;AACZ;AACA,EAAE,mCAAmB;AACrB;AACA,GAAG;AAAA,oGAAC;AACJ,EAAE,MAAM,EAaN;;AAEF,CAAC;;;;;;;;;;ACphBD;;AAEa;;;AAGb;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,cAAc;;AAErE;AACA,iCAAiC;;AAEjC;AACA,QAAQ,gDAAgD;AACxD;AACA;AACA,uDAAuD,UAAU;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,UAAU;;AAE/C;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AClFA;AACA,eAAe,mBAAO,CAAC,MAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7DA,eAAe,mBAAO,CAAC,MAAc;AACrC,eAAe,mBAAO,CAAC,MAAW;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;;AAGb;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA,0CAA0C;AAC1C;AACA,0CAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,0BAA0B,6BAA6B;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACxCA,eAAe,mBAAO,CAAC,MAAc;AACrC,eAAe,mBAAO,CAAC,MAAW;AAClC;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;;AAElE;AACA;;;;;;;;;AC3EA;;AAEa;;;AAGb;AACA,iDAAiD,EAAE,gCAA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ACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9Ea;;;AAGb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACxBA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,gDAAgD;AACxD;AACA;AACA,uDAAuD,UAAU;;AAEjE;AACA,qCAAqC,UAAU;;AAE/C;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;;ACnDA,mBAAO,CAAC,MAA0C;AAClD,cAAc,mBAAO,CAAC,MAAqB;AAC3C;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,cAAc,mBAAO,CAAC,MAAW;AACjC;AACA,iCAAiC,mBAAO,CAAC,MAAgB,cAAc,iBAAiB,mBAAO,CAAC,MAAc,KAAK;;;;;;;;;ACFnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;;AAEhC;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,0BAA0B,QAAQ;;AAElC,iDAAiD,QAAQ;;AAEzD;AACA,KAAK;AACL,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mDAAmD;;AAExE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,yDAAyD;;AAE9E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,wDAAwD;;AAE7E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;;AAE9C;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;;AAE9C,0CAA0C,sBAAsB,EAAE;;AAElE;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;;AAE9C;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/VA;AACA;AACA;AACA;AACe;AACf;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,KAAK;AACL;AACA;AACA;AACA;AACA;;;AC1BA;AAAA;AACA;AACA;AACA;AACA;;AAEyC;;AAEzC;;AAEA;AACA;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;;AAEA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA,KAAK;AACL;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7NA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,2BAA2B,cAAc;;AAEzC;AACA;AACA;;AAEA,kEAAkE,OAAO;;AAEzE;;AAEA;;AAEA;AACA;;AAEA,8EAA8E,YAAY;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,yBAAyB;AACzC;AACA;AACA;;;;;;;;;AC1CA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,MAAiB;;;AAGvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,WAAW;;AAElC;;AAEA,6CAA6C,WAAW;;AAExD,SAAS;AACT;AACA,qBAAqB,WAAW;;AAEhC;;AAEA;;AAEA;AACA;AACA,8BAA8B,WAAW;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,cAAc;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;AACH;;AAEA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,aAAa;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,gCAAgC,uBAAuB;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B,OAAO;;AAErC;AACA;AACA;AACA,mDAAmD,OAAO;;AAE1D;AACA,yDAAyD,OAAO;;AAEhE;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;;AAE3B;AACA;AACA;AACA,+BAA+B,OAAO;AACtC,KAAK;AACL;AACA,+BAA+B,OAAO;AACtC;;AAEA,sEAAsE,OAAO;AAC7E;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;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S;AAC5B,UAAU,mBAAO,CAAC,MAAQ;AAC1B,WAAW,mBAAO,CAAC,MAAS;AAC5B,UAAU,mBAAO,CAAC,MAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,sBAAsB;AACrC;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,OAAO;AAClB,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;;AAGA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA,sBAAsB;AACtB,2BAA2B;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA,sBAAsB;AACtB,2BAA2B;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B,sCAAsC;AACtC;AACA;AACA,sCAAsC;AACtC;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gCAAgC;AAC3C,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC,yBAAyB;AACzB,2BAA2B;AAC3B,+CAA+C,4BAA4B;AAC3E,kCAAkC,gCAAgC;AAClE;AACA;AACA,kDAAkD;AAClD;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gCAAgC;AAC3C,YAAY,OAAO;AACnB;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gCAAgC;AAC3C,YAAY,OAAO;AACnB;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,oCAAoC;AACpC;AACA,WAAW,gCAAgC;AAC3C,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,YAAY,OAAO;AACnB;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB;AACA;AACA;AACA,sBAAsB;AACtB,kBAAkB;AAClB;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,oBAAoB;AACpB;AACA,OAAO,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA,WAAW,uCAAuC;AAClD;AACA,WAAW,uCAAuC;AAClD;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA,GAAG;AACH;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,gCAAgC;AACvD,GAAG;AACH;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,gCAAgC;AACvD,GAAG;AACH;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA,0BAA0B;AAC1B,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,WAAW,qCAAqC;AAChD,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,OAAO;AAClB,YAAY,iCAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,kCAAkC;AAClC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,qCAAqC;AAChD,YAAY,OAAO;AACnB;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;A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AO,CAAC,MAAgB;;;AAG9C;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,WAAW;;AAEhC;;AAEA,qCAAqC,OAAO;AAC5C;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,SAAS;AAC3C;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;AC9UA;AACA;AACa;;;AAGb,kBAAkB,mBAAO,CAAC,MAAiB;;;AAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;;AAElC;;AAEA,sFAAsF,eAAe;;AAErG;;AAEA;AACA,wBAAwB,eAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACpDA,UAAU,mBAAO,CAAC,MAAc;AAChC,UAAU,mBAAO,CAAC,MAAQ;AAC1B,UAAU,mBAAO,CAAC,MAAQ;;AAE1B;AACA,oEAAoE,iCAAiC;AACrG;;;;;;;;;ACNA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,MAAiB;;;AAGvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,gCAAgC,cAAc;;AAE9C;;AAEA,iDAAiD,cAAc;;AAE/D;AACA,sDAAsD,cAAc;;AAEpE;AACA;AACA;;AAEA;AACA,sCAAsC,cAAc;;AAEpD;AACA,uEAAuE,cAAc;;AAErF;AACA;;AAEA,yFAAyF,cAAc;;AAEvG;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,8BAA8B,cAAc;AAC5C;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,qCAAqC,cAAc;AACnD,uDAAuD,cAAc;AACrE;;AAEA;AACA;AACA;AACA,oCAAoC,cAAc;;AAElD,eAAe,aAAa;;AAE5B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC,oBAAoB;AACpD,mDAAmD,OAAO;;AAE1D;AACA,uCAAuC,OAAO;AAC9C,wDAAwD,OAAO;AAC/D;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACnMA;;AAEa;;AAEb,YAAY,mBAAO,CAAC,MAAU;AAC9B,cAAc,mBAAO,CAAC,MAAiB;;;AAGvC;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB,sBAAsB;AACtB,0BAA0B;AAC1B,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yDAAyD,WAAW;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,WAAW;AAC5C;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;;AAE/B;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,WAAW;AAC5C,4CAA4C,OAAO;AACnD;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;;AAE/B;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;ACtOA,6BAA6B;AAC7B,uCAAuC;;;;;;;;;ACDvC;AACA;AACa;;;AAGb;AACA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;;AAEA,2BAA2B,UAAU;;AAErC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACtDA;;;;;;;;ACAA,iBAAiB,mBAAO,CAAC,MAA2C,E;;;;;;;ACApE,eAAe,mBAAO,CAAC,MAAc;AACrC,qBAAqB,mBAAO,CAAC,MAAmB;AAChD,kBAAkB,mBAAO,CAAC,MAAiB;AAC3C;;AAEA,YAAY,mBAAO,CAAC,MAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;AACA;AACA;;;;;;;;;ACfA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA,YAAY;AACZ,aAAa;AACb;AACA;AACA;;;;;;;;ACxCA,mD;;;;;;;ACAA;AACA,kBAAkB,mBAAO,CAAC,MAAU;AACpC,iCAAiC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC1E,CAAC;;;;;;;;;;ACFY;;;AAGb;;AAEA;;AAEA;AACA;AACA,cAAc,cAAc;;AAE5B;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oCAAoC,EAAE;AACtC;AACA;;AAEA,+BAA+B,OAAO;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;;AAGA,0BAA0B;AAC1B;;;AAGA;;;;;;;;;ACzHA;AACA;AACa;;;AAGb;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;;AAE7B,+BAA+B,cAAc;;AAE7C;AACA;AACA;;AAEA,gBAAgB,cAAc;;AAE9B;AACA;AACA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpHA;;AAEa;;AAEb,2BAA2B,mBAAO,CAAC,MAAiB;AACpD,2BAA2B,mBAAO,CAAC,MAAiB;;;AAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD,cAAc;AACtE,4DAA4D,cAAc;;AAE1E;AACA;;AAEA;AACA,qBAAqB,cAAc;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,WAAW;AACrB;AACA,4CAA4C,OAAO;AACnD;AACA,qBAAqB,cAAc;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,WAAW;AACrB;AACA,4CAA4C,OAAO;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA,8CAA8C,OAAO;AACrD;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,sDAAsD,cAAc;;AAEpE;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,iBAAiB,+CAA+C;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACvJA;AACA;AACA;AACA;AACa;;;AAGb,qBAAqB,mBAAO,CAAC,MAAiB;;;AAG9C;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,QAAQ;;AAE1C,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,+BAA+B,QAAQ;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;;AAExC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;;AAEvC;AACA;AACA,gDAAgD,UAAU;;AAE1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpIA;AACA,gBAAgB,mBAAO,CAAC,MAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;;AAEa;;;AAGb;AACA;;AAEA,sDAAsD,cAAc;;AAEpE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;ACjCA;AACA,kBAAkB,mBAAO,CAAC,MAAQ;AAClC;AACA,0CAA0C,mBAAO,CAAC,MAAS,6BAA6B;AACxF;AACA;AACA;;;;;;;;ACNA;AACA,gBAAgB,mBAAO,CAAC,MAAe;AACvC;AACA;AACA,2DAA2D;AAC3D;;;;;;;;ACLA;AACA,kBAAkB,mBAAO,CAAC,MAAU;AACpC,iCAAiC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC1E,CAAC;;;;;;;;;ACHY;;AAEb;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA,mC;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACa;;;AAGb,aAAa,mBAAO,CAAC,MAAS;;;AAG9B;AACA,sBAAsB,mBAAO,CAAC,MAAwB;AACtD,sBAAsB,mBAAO,CAAC,MAAoB;AAClD,sBAAsB,mBAAO,CAAC,MAAqB;AACnD,sBAAsB,mBAAO,CAAC,MAAsB;AACpD,sBAAsB,mBAAO,CAAC,MAA2B;AACzD,sBAAsB,mBAAO,CAAC,MAA0B;AACxD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+BAA+B,OAAO;AACtC;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,MAAyB;;;AAGxD;;;;;;;;ACzDA,iBAAiB,mBAAO,CAAC,MAAsB;AAC/C,cAAc,mBAAO,CAAC,MAAgB;AACtC,eAAe,mBAAO,CAAC,MAAa;AACpC,aAAa,mBAAO,CAAC,MAAW;AAChC,WAAW,mBAAO,CAAC,MAAS;AAC5B,gBAAgB,mBAAO,CAAC,MAAc;AACtC,UAAU,mBAAO,CAAC,MAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,wBAAwB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACa;;;AAGb,qBAAqB,mBAAO,CAAC,MAAiB;AAC9C,qBAAqB,mBAAO,CAAC,MAAiB;AAC9C,qBAAqB,mBAAO,CAAC,MAAiB;;AAE9C;AACA;AACA,0BAA0B;;;AAG1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,mBAAmB;AAChC;;AAEA;;AAEA,8BAA8B,QAAQ;AACtC,wCAAwC,OAAO;AAC/C;AACA;;AAEA,gCAAgC,UAAU;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,uBAAuB,QAAQ;AAC/B,sFAAsF;AACtF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,uBAAuB,mBAAmB;AAC1C,sFAAsF;AACtF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA,2CAA2C,OAAO;AAClD;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,6BAA6B;;AAEhE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,sCAAsC,QAAQ;;AAE9C,wCAAwC,aAAa;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;AClMa;;;AAGb;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,MAA+B;AACtD,eAAe,mBAAO,CAAC,MAA8B;AACrD,eAAe,mBAAO,CAAC,MAA6B;AACpD,eAAe,mBAAO,CAAC,MAA6B;;AAEpD,QAAQ,WAAW;AACnB;;AAEA,QAAQ,MAAM;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA;;AAEA;;AAEA;;AAEA,mDAAmD,EAAE;;AAErD;AACA;;AAEA;;AAEA,yBAAyB,EAAE,cAAc,EAAE,kCAAkC,IAAI;;AAEjF;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,cAAc,2BAA2B,QAAQ;AACjD;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,6BAA6B;;AAEvC;;AAEA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yEAAyE,KAAK;AAC9E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA,6BAA6B,IAAI;;AAEjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;AClLA;AACA;;AAEa;;;AAGb;AACA,MAAM;;AAEN,oDAAoD,oCAAoC,MAAM;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,cAAc;;AAExC,gBAAgB,kDAAkD;;AAElE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA,kBAAkB,cAAc;;AAEhC;AACA;AACA,kBAAkB,uCAAuC;AACzD;AACA;AACA;;AAEA,gBAAgB,kDAAkD;;AAElE;;AAEA;AACA,EAAE;;;;;;;;;ACxFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,2BAA2B,GAAG,yBAAyB,GAAG;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,sCAAsC,QAAQ;;AAE9C,wCAAwC,aAAa;;AAErD,iDAAiD,UAAU;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;AC1GA,wBAAwB;AACxB;AACa;;AAEb;AACA,iBAAiB,mBAAO,CAAC,MAA6B;;;;;;;;ACLtD;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,cAAc;;AAErE,sBAAsB,cAAc;;AAEpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,gBAAgB,cAAc;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,aAAa;;AAE5B;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,UAAU;;AAEzD;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,UAAU;;AAEpC;AACA;;AAEA,oBAAoB,UAAU;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;AChGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,sCAAsC,sBAAsB;AAC5D;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,YAAY;;AAEZ;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,wBAAwB,yBAAyB;AACjD;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAuC,mBAAmB;;AAE1D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,mEAAmE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yEAAyE;AACzE,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED,IAAI,KAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF,uBAAuB,KAAK;AAC5B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,yDAAyD;AACzD;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,YAAY,uCAAuC;AAC7E;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA,CAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI;AACxB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,0GAA0G,EAAE;AAC5G,CAAC;;AAED;;AAEA;AACA;AACA,wGAAwG,IAAI,kBAAkB;AAC9H;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,8cAA8c;AAC9c;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,4BAA4B,OAAO,GAAG,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gCAAgC,EAAE,MAAM,OAAO,GAAG,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG;AACxE;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF,CAAC;;;;;;;;;;ACx8BD;;AAEa;;;AAGb,kBAAkB,mBAAO,CAAC,MAAmB;;;AAG7C;AACA;AACA,qBAAqB;AACrB;AACA;;;AAGA;AACA;AACA;;AAEA,+BAA+B,cAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9CA;AACA;AACA,gBAAgB,mBAAO,CAAC,MAAe;AACvC,eAAe,mBAAO,CAAC,MAAc;AACrC,sBAAsB,mBAAO,CAAC,MAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;;;;;;;;;ACrBa;;;AAGb;;;AAGA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;;AAE5B;;AAEA,aAAa,SAAS;AACtB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,gCAAgC,OAAO;AACvC;;AAEA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B;;;AAGA;;;;;;;;ACjGA,kBAAkB,mBAAO,CAAC,MAAgB,MAAM,mBAAO,CAAC,MAAU;AAClE,+BAA+B,mBAAO,CAAC,MAAe,gBAAgB,mBAAmB,UAAU,EAAE,EAAE;AACvG,CAAC;;;;;;;;;ACFD;AACA;AACa;;;AAGb;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;;AAE7B,2DAA2D,cAAc;;AAEzE;;AAEA,aAAa,oBAAoB;AACjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9HA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJa;AACb,uBAAuB,mBAAO,CAAC,MAAuB;AACtD,WAAW,mBAAO,CAAC,MAAc;AACjC,gBAAgB,mBAAO,CAAC,MAAc;AACtC,gBAAgB,mBAAO,CAAC,MAAe;;AAEvC;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,MAAgB;AACzC,gCAAgC;AAChC,cAAc;AACd,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;;;;;;;ACjCA,eAAe,mBAAO,CAAC,MAAc;AACrC;AACA;AACA;AACA;;;;;;;;ACJA,iJ;;;;;;;;ACAA;;AAEa;;AAEb,2BAA2B,mBAAO,CAAC,MAAiB;AACpD,2BAA2B,mBAAO,CAAC,MAAiB;;;AAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD,cAAc;;AAEtE;AACA;;AAEA;AACA,qBAAqB,cAAc;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,WAAW;AACrB;AACA,4CAA4C,OAAO;AACnD;AACA,qBAAqB,cAAc;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,WAAW;AACrB;AACA,4CAA4C,OAAO;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA,8CAA8C,OAAO;AACrD;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD,cAAc;;AAEpE;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,iBAAiB,+CAA+C;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACrJA,UAAU,mBAAO,CAAC,MAAQ;AAC1B,gBAAgB,mBAAO,CAAC,MAAe;AACvC,mBAAmB,mBAAO,CAAC,MAAmB;AAC9C,eAAe,mBAAO,CAAC,MAAe;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;;;;;;;;;ACFa;;;AAGb,iBAAiB,mBAAO,CAAC,MAAQ;;;;;;;;ACHjC;AACA,UAAU;AACV;;;;;;;;;ACFa;;AAEb,cAAc,mBAAO,CAAC,MAAwB;AAC9C,cAAc,mBAAO,CAAC,MAAuB;AAC7C,cAAc,mBAAO,CAAC,MAAuB;AAC7C,cAAc,mBAAO,CAAC,MAAsB;AAC5C,cAAc,mBAAO,CAAC,MAAsB;;;;;;;;;ACN/B;;;AAGb,2BAA2B,mBAAO,CAAC,MAAiB;AACpD,2BAA2B,mBAAO,CAAC,MAAiB;;;AAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,cAAc;;AAErE,kDAAkD,cAAc;;AAEhE;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,0DAA0D,cAAc;AACxE;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ,gDAAgD;AACxD;AACA;AACA,uDAAuD,UAAU;;AAEjE;AACA,qCAAqC,UAAU;;AAE/C;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;;AAEA;AACA;;AAEA,eAAe,WAAW;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,qEAAqE,cAAc;;AAEnF;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,cAAc;;AAE9B;AACA,qCAAqC,cAAc;;AAEnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,aAAa;;AAE5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;;AAEA;AACA;AACA;;;;;;;;ACrMA;AACA,gBAAgB,mBAAO,CAAC,MAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBa;;;AAGb,wBAAwB,mBAAO,CAAC,MAAU;AAC1C,wBAAwB,mBAAO,CAAC,MAAU;AAC1C,wBAAwB,mBAAO,CAAC,MAAU;AAC1C,wBAAwB,mBAAO,CAAC,MAAS;;;;;;;;ACNzC;AACA;AACA;AACA;;;;;;;;ACHA,eAAe,mBAAO,CAAC,MAAc;AACrC,qBAAqB,mBAAO,CAAC,MAAmB;AAChD,kBAAkB,mBAAO,CAAC,MAAiB;AAC3C;;AAEA,YAAY,mBAAO,CAAC,MAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,KAAK;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,2CAA2C,KAAK;AAChD,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,YAAY;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,WAAW;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;;AAEA;;;;;;;;ACvTA,2BAA2B,mBAAO,CAAC,MAA+C;AAClF;;;AAGA;AACA,cAAc,QAAS,gDAAgD,WAAW,gBAAgB,8BAA8B,8DAA8D,cAAc,gBAAgB,gBAAgB,oBAAoB,kBAAkB,iBAAiB,gBAAgB,gBAAgB,WAAW,qBAAqB,kBAAkB,iBAAiB,aAAa,aAAa,6CAA6C,kBAAkB,uDAAuD,mBAAmB,sBAAsB,YAAY,cAAc,cAAc,0BAA0B,mBAAmB,mCAAmC,iCAAiC,yBAAyB,mBAAmB,2BAA2B,yCAAyC,mBAAmB,yDAAyD,cAAc,8BAA8B,WAAW,sFAAsF,cAAc,0FAA0F,cAAc,0GAA0G,cAAc,+CAA+C,cAAc,8BAA8B,WAAW,6BAA6B,gBAAgB,cAAc,kBAAkB,cAAc,YAAY,eAAe,UAAU,mCAAmC,kBAAkB,mBAAmB,yBAAyB,wCAAwC,kBAAkB,oBAAoB,iCAAiC,kBAAkB,oBAAoB,MAAM,eAAe,YAAY,UAAU,oBAAoB,4BAA4B,yBAAyB,sBAAsB,qBAAqB,iBAAiB,wBAAwB,oBAAoB,cAAc,6BAA6B,+BAA+B,4BAA4B,WAAW,cAAc,mBAAmB,iBAAiB,iBAAiB,kBAAkB,0BAA0B,kBAAkB,SAAS,WAAW,mCAAmC,UAAU,gCAAgC,UAAU,wCAAwC,qBAAqB,4BAA4B,eAAe,iCAAiC,gBAAgB,SAAS,cAAc,aAAa,mBAAmB,iBAAiB,UAAU,yBAAyB,sBAAsB,qBAAqB,4FAA4F,WAAW,eAAe,eAAe,mBAAmB,+BAA+B,oCAAoC,mBAAmB,4NAA4N,cAAc,qBAAqB;;AAEhkG;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;AC/CA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtEA,eAAe,mBAAO,CAAC,MAAc;AACrC;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACa;;;AAGb,kBAAkB,mBAAO,CAAC,MAAiB;;;AAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,OAAO;;AAEhC;AACA;AACA;;AAEA,wBAAwB,OAAO;;AAE/B;AACA,uCAAuC,OAAO;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;;AAEA,sBAAsB,eAAe;AACrC,oBAAoB,eAAe;;AAEnC;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;;;;;;;;ACLzC;AACA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;;AAExC,sDAAsD,cAAc;AACpE,0DAA0D,cAAc;;AAExE,yBAAyB,WAAW;AACpC,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;;AAEA,4BAA4B,cAAc,EAAE;AAC5C,yEAAyE,cAAc;AACvF,iBAAiB,aAAa;AAC9B;;AAEA,+BAA+B,0BAA0B;AACzD,oCAAoC,+BAA+B;AACnE;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,cAAc;AACzC,sDAAsD,cAAc;AACpE,0DAA0D,cAAc;;AAExE;AACA;;AAEA;AACA,uBAAuB,cAAc;;AAErC;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D,sCAAsC,+BAA+B;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;;AAExC,4DAA4D,cAAc;AAC1E,sDAAsD,cAAc;AACpE,0DAA0D,cAAc;;AAExE,yBAAyB,WAAW;AACpC,+CAA+C,cAAc;AAC7D,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;;AAEA,4BAA4B,cAAc,EAAE;AAC5C,qBAAqB,cAAc;AACnC;;AAEA;AACA,uEAAuE,cAAc;;AAErF;AACA,sCAAsC,+BAA+B;;AAErE;AACA;AACA,gDAAgD;AAChD;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,QAAQ;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA,KAAK;;AAEL,oCAAoC,QAAQ;AAC5C;;AAEA;AACA;;AAEA,gCAAgC,OAAO;AACvC;AACA,oBAAoB;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE,oCAAoC;AACxG;AACA;AACA;AACA;;;;;;;;;AC9WA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,MAAiB;;;AAGvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,cAAc;;AAErE;AACA,oDAAoD,cAAc;;AAElE;AACA;AACA,eAAe,aAAa;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AC5FkF;AAC3B;AACL;AACc;;;AAGhE;AACuF;AACvF,gBAAgB,kBAAU;AAC1B,EAAE,+BAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,yD;;ACnBS;AACA;AACT,kFAAG;AACI;;;;;;;;;ACHT;;;AAGb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,QAAQ;;AAE1B;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA,sBAAsB,4CAA4C;AAClE,wBAAwB,0CAA0C;AAClE,wBAAwB,0CAA0C;AAClE,wBAAwB,0CAA0C;AAClE,0BAA0B,4CAA4C;;;AAGtE,wBAAwB,qCAAqC,eAAe;;AAE5E;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA,8BAA8B;AAC9B;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,UAAU;AAC1D,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,MAAU;;AAEvC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,2CAA2C;;AAElE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,QAAQ;;AAE/B,oBAAoB;;AAEpB;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA,+BAA+B;AAC/B;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,cAAc;;AAEnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,mCAAmC;;AAEzD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;AC3nBA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,MAAiB;;;AAGvC;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,cAAc;;AAErE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD,wBAAwB,OAAO;AAC/B;;AAEA,gBAAgB,cAAc;;AAE9B,eAAe,aAAa;;AAE5B;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;AC5CA;AACA;AACa;;;AAGb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,WAAW;;AAElC;AACA;AACA,2DAA2D,WAAW;;AAEtE;;AAEA;AACA,wBAAwB,WAAW;;AAEnC;AACA,qBAAqB,WAAW;;AAEhC;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;;AAEA;AACA,8BAA8B,cAAc;;AAE5C;AACA;AACA,gCAAgC,cAAc;AAC9C;;AAEA,mDAAmD,cAAc;AACjE;AACA,2BAA2B,cAAc;;AAEzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kCAAkC,aAAa;;AAE/C,uDAAuD,aAAa;AACpE;AACA,+BAA+B,OAAO;;AAEtC;;AAEA;AACA;AACA;;AAEA,gCAAgC,OAAO;AACvC;;AAEA,kCAAkC,OAAO;AACzC,mDAAmD,OAAO;;AAE1D;AACA,8BAA8B,OAAO;AACrC,kCAAkC,UAAU;AAC5C,8BAA8B,OAAO;;AAErC,mDAAmD,OAAO;AAC1D;AACA,6BAA6B,OAAO;;AAEpC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,0DAA0D,oCAAoC;AAC9F","file":"markdown-markup-input.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"markdown-markup-input\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"markdown-markup-input\"] = factory(root[\"Vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you with - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and returns list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = {};        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  this.delimiters = [];   // Emphasis-like delimiters\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// Normalize input string\n\n'use strict';\n\n\nvar NEWLINES_RE  = /\\r[\\n\\u0085]?|[\\u2424\\u2028\\u0085]/g;\nvar NULL_RE      = /\\u0000/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE        = md.utils.escapeRE,\n      arrayReplaceAt  = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var OTHER_CHARS      = ' \\r\\n$+<=>^`|~';\n\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) { return; }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(escapeRE).join('|') + ')'\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text))) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};\n","// Process ~subscript~\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n\nfunction subscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sub_open', 'sub', 1);\n  token.markup  = '~';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sub_close', 'sub', -1);\n  token.markup  = '~';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sub_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sub', subscript);\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=less&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e68a6352\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {{0: number, 1: string}} */\ndiff_match_patch.Diff;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = patch.diffs[y].slice();\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push([DIFF_EQUAL, precontext]);\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push([diff_type, diff_text]);\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push([diff_type, diff_text]);\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line]);\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line]);\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line]);\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emmulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indicies are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!./less/prism.css\"), \"\");\n\n// module\nexports.push([module.id, \".v-editor{--bg-color:#f5f5f5;--border-color:#e9e9e9;--small-font:1.4rem;--main-color:#222;--second-color:#919191;background-color:var(--bg-color);border:1px solid var(--border-color)}.v-editor .btn-text{display:inline-block;font-size:var(--small-font);text-align:center;padding:0 12px;height:30px;line-height:28px;background-color:initial;border:1px solid transparent;border-radius:4px;transition:all .3s;min-width:inherit;cursor:pointer}.v-editor .cl-toc-section{display:none}.v-editor .ve-body{display:flex;line-height:1.5}.v-editor .ve-editor{width:100%;height:100%;overflow:auto}.v-editor .ve-editor.expand{width:calc(100% - 30px)}.v-editor .markdown-highlighting .h1,.v-editor .markdown-highlighting .h2,.v-editor .markdown-highlighting .h3,.v-editor .markdown-highlighting .h4,.v-editor .markdown-highlighting .h5,.v-editor .markdown-highlighting .h6{font-weight:700}.v-editor .markdown-highlighting .h1{font-size:2em}.v-editor .markdown-highlighting .h2{font-size:1.5em}.v-editor .markdown-highlighting .h3{font-size:1.17em}.v-editor .markdown-highlighting .h4{font-size:1em}.v-editor .markdown-highlighting .h5{font-size:.83em}.v-editor .markdown-highlighting .h6{font-size:.75em}.v-editor .markdown-highlighting .pre{font-family:Roboto Mono,Lucida Sans Typewriter,Lucida Console,monaco,Courrier,monospace;font-size:.85em;color:rgba(0,0,0,.8);line-height:1.33}.v-editor .markdown-highlighting .pre[class*=language-]{color:#000}.v-editor .markdown-highlighting .code{font-family:Roboto Mono,Lucida Sans Typewriter,Lucida Console,monaco,Courrier,monospace;font-size:.85em}.v-editor .markdown-highlighting .tag{color:rgba(0,0,0,.8);font-weight:600}.v-editor .markdown-highlighting .tag .attr-name,.v-editor .markdown-highlighting .tag .attr-value,.v-editor .markdown-highlighting .tag .punctuation{font-weight:400}.v-editor .markdown-highlighting .latex,.v-editor .markdown-highlighting .math{color:rgba(0,0,0,.8)}.v-editor .markdown-highlighting .entity{color:rgba(0,0,0,.8);font-style:italic}.v-editor .markdown-highlighting .entity,.v-editor .markdown-highlighting .table{font-family:Roboto Mono,Lucida Sans Typewriter,Lucida Console,monaco,Courrier,monospace;font-size:.85em}.v-editor .markdown-highlighting .table{display:inline;border:none}.v-editor .markdown-highlighting .keyword{color:#000;font-weight:600}.v-editor .markdown-highlighting .cl-toc,.v-editor .markdown-highlighting .code,.v-editor .markdown-highlighting .img,.v-editor .markdown-highlighting .img-wrapper,.v-editor .markdown-highlighting .imgref{background-color:rgba(0,0,0,.05);border-radius:2px;padding:.15em 0}.v-editor .markdown-highlighting .img-wrapper{display:inline-block}.v-editor .markdown-highlighting .img-wrapper .img{display:inline-block;padding:0;background-color:initial}.v-editor .markdown-highlighting .img-wrapper img{max-width:100%;padding:0 .15em}.v-editor .markdown-highlighting .cl-toc{font-size:2.8em;padding:.15em}.v-editor .markdown-highlighting .blockquote{color:rgba(0,0,0,.48)}.v-editor .markdown-highlighting .cl-hash{color:rgba(0,0,0,.28)}.v-editor .markdown-highlighting .cl,.v-editor .markdown-highlighting .hr{color:rgba(0,0,0,.28);font-style:normal;font-weight:400}.v-editor .markdown-highlighting .em{font-style:italic}.v-editor .markdown-highlighting .strong,.v-editor .markdown-highlighting .term{font-weight:600}.v-editor .markdown-highlighting .cl-del-text{text-decoration:line-through}.v-editor .markdown-highlighting .cl-underlined-text,.v-editor .markdown-highlighting .email,.v-editor .markdown-highlighting .url{text-decoration:underline}.v-editor .markdown-highlighting .linkdef .url{color:rgba(0,0,0,.28)}.v-editor .markdown-highlighting .fn,.v-editor .markdown-highlighting .inlinefn,.v-editor .markdown-highlighting .sup{font-size:smaller;position:relative;top:-.5em}.v-editor .markdown-highlighting .sub{bottom:-.25em;font-size:smaller;position:relative}.v-editor .markdown-highlighting .img,.v-editor .markdown-highlighting .imgref,.v-editor .markdown-highlighting .link,.v-editor .markdown-highlighting .linkref{color:rgba(0,0,0,.28)}.v-editor .markdown-highlighting .img .cl-underlined-text,.v-editor .markdown-highlighting .imgref .cl-underlined-text,.v-editor .markdown-highlighting .link .cl-underlined-text,.v-editor .markdown-highlighting .linkref .cl-underlined-text{color:#000}.v-editor .markdown-highlighting .cl-title{color:rgba(0,0,0,.8)}.v-editor .editor-inner{margin:0;font-family:inherit;font-variant-ligatures:no-common-ligatures;white-space:pre-wrap;word-break:break-all;word-wrap:break-word;background-color:#fff;padding:10px;min-height:100%}.v-editor .editor-inner.monospaced{font-family:Roboto Mono,Lucida Sans Typewriter,Lucida Console,monaco,Courrier,monospace;font-size:.85em}.v-editor .editor-inner .hide{display:none}\", \"\"]);\n\n// exports\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Process ^superscript^\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction superscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sup_open', 'sup', 1);\n  token.markup  = '^';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sup_close', 'sup', -1);\n  token.markup  = '^';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sup_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sup', superscript);\n};\n","import mod from \"-!../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=less&\"","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nmodule.exports = function link_pairs(state) {\n  var i, j, lastDelim, currDelim,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    lastDelim = delimiters[i];\n\n    if (!lastDelim.close) { continue; }\n\n    j = i - lastDelim.jump - 1;\n\n    while (j >= 0) {\n      currDelim = delimiters[j];\n\n      if (currDelim.open &&\n          currDelim.marker === lastDelim.marker &&\n          currDelim.end < 0 &&\n          currDelim.level === lastDelim.level) {\n\n        var odd_match = false;\n\n        // typeofs are for backward compatibility with plugins\n        if ((currDelim.close || lastDelim.open) &&\n            typeof currDelim.length !== 'undefined' &&\n            typeof lastDelim.length !== 'undefined') {\n\n          // from spec:\n          // sum of the lengths [...] must not be a multiple of 3\n          // unless both lengths are multiples of 3\n          if ((currDelim.length + lastDelim.length) % 3 === 0) {\n            if (currDelim.length % 3 !== 0 || lastDelim.length % 3 !== 0) {\n              odd_match = true;\n            }\n          }\n        }\n\n        if (!odd_match) {\n          lastDelim.jump = i - j;\n          lastDelim.open = false;\n          currDelim.end  = i;\n          currDelim.jump = 0;\n          break;\n        }\n      }\n\n      j -= currDelim.jump + 1;\n    }\n  }\n};\n","module.exports = {};\n","module.exports = require(\"core-js/library/fn/object/define-property\");","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      jump:   i,\n      token:  state.tokens.length - 1,\n      level:  state.level,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // treat this as the middle of the word\n        canOpen = false;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,4}[a-zA-Z0-9%/]|' + // github has ... in commit range links,\n                                     // google has .... in links (issue #66)\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +      // allow `,,,` in paths\n          '\\\\!(?!' + re.src_ZCc + '|[!]).|' +\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n          // en-dash\n          .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n          .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/maps/entities.json');\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tvar elements = container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = 'none', grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,'none'])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tvar insertHighlightedCode = function (highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {Element} [container=document]\n\t */\n\tself.Prism.fileHighlight = function(container) {\n\t\tcontainer = container || document;\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t// ignore if already loaded\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// load current\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\n\t\tif (Prism.plugins.toolbar) {\n\t\t\tPrism.plugins.toolbar.registerButton('download-file', function (env) {\n\t\t\t\tvar pre = env.element.parentNode;\n\t\t\t\tif (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\t\t\tvar a = document.createElement('a');\n\t\t\t\ta.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n\t\t\t\ta.setAttribute('download', '');\n\t\t\t\ta.href = src;\n\t\t\t\treturn a;\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t// execute inside handler, for dropping Event as argument\n\t\tself.Prism.fileHighlight();\n\t});\n\n})();\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // Token level.\n      //\n      level:  state.level,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"code[class*=language-],pre[class*=language-]{color:#fff;background:none;text-shadow:0 -.1em .2em #000;font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}:not(pre)>code[class*=language-],pre[class*=language-]{background:#4d4033}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border:.3em solid #7a6652;border-radius:.5em;box-shadow:inset 1px 1px .5em #000}:not(pre)>code[class*=language-]{padding:.15em .2em .05em;border-radius:.3em;border:.13em solid #7a6652;box-shadow:inset 1px 1px .3em -.1em #000;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#998066}.namespace,.token.punctuation{opacity:.7}.token.boolean,.token.constant,.token.number,.token.property,.token.symbol,.token.tag{color:#d1949e}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#bde052}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f5b83d}.token.atrule,.token.attr-value,.token.keyword{color:#d1949e}.token.important,.token.regex{color:#e90}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:red}pre[class*=language-].line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}pre[class*=language-].line-numbers>code{position:relative;white-space:inherit}.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:0;font-size:100%;left:-3.8em;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}div.code-toolbar{position:relative}div.code-toolbar>.toolbar{position:absolute;top:.3em;right:.2em;transition:opacity .3s ease-in-out;opacity:0}div.code-toolbar:hover>.toolbar{opacity:1}div.code-toolbar>.toolbar .toolbar-item{display:inline-block}div.code-toolbar>.toolbar a{cursor:pointer}div.code-toolbar>.toolbar button{background:none;border:0;color:inherit;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}div.code-toolbar>.toolbar a,div.code-toolbar>.toolbar button,div.code-toolbar>.toolbar span{color:#bbb;font-size:.8em;padding:0 .5em;background:#f5f2f0;background:hsla(0,0%,87.8%,.2);box-shadow:0 2px 0 0 rgba(0,0,0,.2);border-radius:.5em}div.code-toolbar>.toolbar a:focus,div.code-toolbar>.toolbar a:hover,div.code-toolbar>.toolbar button:focus,div.code-toolbar>.toolbar button:hover,div.code-toolbar>.toolbar span:focus,div.code-toolbar>.toolbar span:hover{color:inherit;text-decoration:none}\", \"\"]);\n\n// exports\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name(tokens, idx, options, env/*, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var prefix = '';\n\n  if (typeof env.docId === 'string') {\n    prefix = '-' + env.docId + '-';\n  }\n\n  return prefix + n;\n}\n\nfunction render_footnote_caption(tokens, idx/*, options, env, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n\n  if (tokens[idx].meta.subId > 0) {\n    n += ':' + tokens[idx].meta.subId;\n  }\n\n  return '[' + n + ']';\n}\n\nfunction render_footnote_ref(tokens, idx, options, env, slf) {\n  var id      = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  var refid   = id;\n\n  if (tokens[idx].meta.subId > 0) {\n    refid += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + id + '\" id=\"fnref' + refid + '\">' + caption + '</a></sup>';\n}\n\nfunction render_footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\n\nfunction render_footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\n\nfunction render_footnote_open(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<li id=\"fn' + id + '\" class=\"footnote-item\">';\n}\n\nfunction render_footnote_close() {\n  return '</li>\\n';\n}\n\nfunction render_footnote_anchor(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  /* ↩ with escape code to prevent display as Apple Emoji on iOS */\n  return ' <a href=\"#fnref' + id + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n}\n\n\nmodule.exports = function footnote_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref;\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close;\n  md.renderer.rules.footnote_open         = render_footnote_open;\n  md.renderer.rules.footnote_close        = render_footnote_close;\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor;\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption;\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens: tokens\n      };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId, label: label };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i, label: list[i].label };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = list[i].content;\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j, label: list[i].label };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      wasOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  wasOutdented = false;\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    if (state.sCount[nextLine] < state.blkIndent) wasOutdented = true;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !wasOutdented) {\n      // This line is inside the blockquote.\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    require('current-script-polyfill')\n  }\n\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"v-editor\"},[_c('div',{staticClass:\"ve-body\"},[_c('div',{staticClass:\"ve-editor\"},[_c('pre',{staticClass:\"editor-inner markdown-highlighting\",on:{\"keyup\":_vm.handleInputChange,\"focus\":function($event){return _vm.$emit('focus')},\"blur\":function($event){return _vm.$emit('blur')}}})])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const initConverterListeners = [];\n\nexport default {\n  onInitConverter(priority, listener) {\n    initConverterListeners[priority] = listener;\n  },\n\n  initConverter(markdown, options) {\n    // Use forEach as it's a sparsed array\n    initConverterListeners.forEach(listener => {\n      listener(markdown, options);\n    });\n  },\n};\n","import markdownitAbbr from 'markdown-it-abbr';\nimport markdownitDeflist from 'markdown-it-deflist';\nimport markdownitFootnote from 'markdown-it-footnote';\nimport markdownitSub from 'markdown-it-sub';\nimport markdownitSup from 'markdown-it-sup';\nimport extensionSvc from '../services/extensionSvc';\n\nconst coreBaseRules = ['normalize', 'block', 'inline', 'linkify', 'replacements', 'smartquotes'];\nconst blockBaseRules = [\n  'code',\n  'fence',\n  'blockquote',\n  'hr',\n  'list',\n  'reference',\n  'heading',\n  'lheading',\n  'html_block',\n  'table',\n  'paragraph',\n];\nconst inlineBaseRules = [\n  'text',\n  'newline',\n  'escape',\n  'backticks',\n  'strikethrough',\n  'emphasis',\n  'link',\n  'image',\n  'autolink',\n  'html_inline',\n  'entity',\n];\nconst inlineBaseRules2 = ['balance_pairs', 'strikethrough', 'emphasis', 'text_collapse'];\n\n\nextensionSvc.onInitConverter(0, (markdown, options) => {\n  markdown.set({\n    html: true,\n    breaks: !!options.breaks,\n    linkify: !!options.linkify,\n    typographer: !!options.typographer,\n    langPrefix: 'prism language-',\n  });\n\n  markdown.core.ruler.enable(coreBaseRules);\n\n  const blockRules = blockBaseRules.slice();\n  if (!options.fence) {\n    blockRules.splice(blockRules.indexOf('fence'), 1);\n  }\n  if (!options.table) {\n    blockRules.splice(blockRules.indexOf('table'), 1);\n  }\n  markdown.block.ruler.enable(blockRules);\n\n  const inlineRules = inlineBaseRules.slice();\n  const inlineRules2 = inlineBaseRules2.slice();\n  if (!options.del) {\n    inlineRules.splice(blockRules.indexOf('strikethrough'), 1);\n    inlineRules2.splice(blockRules.indexOf('strikethrough'), 1);\n  }\n  markdown.inline.ruler.enable(inlineRules);\n  markdown.inline.ruler2.enable(inlineRules2);\n\n  if (options.abbr) {\n    markdown.use(markdownitAbbr);\n  }\n  if (options.deflist) {\n    markdown.use(markdownitDeflist);\n  }\n  if (options.footnote) {\n    markdown.use(markdownitFootnote);\n  }\n  if (options.sub) {\n    markdown.use(markdownitSub);\n  }\n  if (options.sup) {\n    markdown.use(markdownitSup);\n  }\n\n  markdown.core.ruler.before('replacements', 'anchors', state => {\n    const anchorHash = {};\n    let headingOpenToken;\n    let headingContent;\n    state.tokens.forEach(token => {\n      if (token.type === 'heading_open') {\n        headingContent = '';\n        headingOpenToken = token;\n      } else if (token.type === 'heading_close') {\n        headingOpenToken.headingContent = headingContent;\n\n        // Slugify according to http://pandoc.org/README.html#extension-auto_identifiers\n        let slug = headingContent\n          .replace(/\\s/g, '-') // Replace all spaces and newlines with hyphens\n          .replace(/[\\0-,/:-@[-^`{-~]/g, '') // Remove all punctuation, except underscores, hyphens, and periods\n          .toLowerCase(); // Convert all alphabetic characters to lowercase\n\n        // Remove everything up to the first letter\n        let i;\n        for (i = 0; i < slug.length; i += 1) {\n          const charCode = slug.charCodeAt(i);\n          if ((charCode >= 0x61 && charCode <= 0x7a) || charCode > 0x7e) {\n            break;\n          }\n        }\n\n        // If nothing left after this, use `section`\n        slug = slug.slice(i) || 'section';\n\n        let anchor = slug;\n        let index = 1;\n        while (Object.prototype.hasOwnProperty.call(anchorHash, anchor)) {\n          anchor = `${slug}-${index}`;\n          index += 1;\n        }\n        anchorHash[anchor] = true;\n        headingOpenToken.headingAnchor = anchor;\n        headingOpenToken.attrs = [['id', anchor]];\n        headingOpenToken = undefined;\n      } else if (headingOpenToken) {\n        headingContent += token.children.reduce((result, child) => {\n          if (child.type !== 'footnote_ref') {\n            return result + child.content;\n          }\n          return result;\n        }, '');\n      }\n    });\n  });\n\n  // Wrap tables into a div for scrolling\n  markdown.renderer.rules.table_open = (tokens, idx, opts) =>\n    `<div class=\"table-wrapper\">${markdown.renderer.renderToken(tokens, idx, opts)}`;\n  markdown.renderer.rules.table_close = (tokens, idx, opts) =>\n    `${markdown.renderer.renderToken(tokens, idx, opts)}</div>`;\n\n  // Transform style into align attribute to pass the HTML sanitizer\n  const textAlignLength = 'text-align:'.length;\n  markdown.renderer.rules.td_open = (tokens, idx, opts) => {\n    const token = tokens[idx];\n    if (token.attrs && token.attrs.length && token.attrs[0][0] === 'style') {\n      token.attrs = [['align', token.attrs[0][1].slice(textAlignLength)]];\n    }\n    return markdown.renderer.renderToken(tokens, idx, opts);\n  };\n  markdown.renderer.rules.th_open = markdown.renderer.rules.td_open;\n\n  markdown.renderer.rules.footnote_ref = (tokens, idx) => {\n    const n = `${Number(tokens[idx].meta.id + 1)}`;\n    let id = `fnref${n}`;\n    if (tokens[idx].meta.subId > 0) {\n      id += `:${tokens[idx].meta.subId}`;\n    }\n    return `<sup class=\"footnote-ref\"><a href=\"#fn${n}\" id=\"${id}\">${n}</a></sup>`;\n  };\n});\n","// import './emojiExtension';\n// import './katexExtension';\nimport './markdownExtension';\n// import './mermaidExtension';\n","var arrayProperties = {};\nvar liveCollectionProperties = {};\nvar functionProperties = {};\nvar objectProperties = {};\nvar slice = Array.prototype.slice;\n\narrayProperties.cl_each = function(cb) {\n  var i = 0;\n  var length = this.length;\n  for (; i < length; i++) {\n    cb(this[i], i, this);\n  }\n};\n\narrayProperties.cl_map = function(cb) {\n  var i = 0;\n  var length = this.length;\n  var result = Array(length);\n  for (; i < length; i++) {\n    result[i] = cb(this[i], i, this);\n  }\n  return result;\n};\n\narrayProperties.cl_reduce = function(cb, memo) {\n  var i = 0;\n  var length = this.length;\n  for (; i < length; i++) {\n    memo = cb(memo, this[i], i, this);\n  }\n  return memo;\n};\n\narrayProperties.cl_some = function(cb) {\n  var i = 0;\n  var length = this.length;\n  for (; i < length; i++) {\n    if (cb(this[i], i, this)) {\n      return true;\n    }\n  }\n};\n\narrayProperties.cl_filter = function(cb) {\n  var i = 0;\n  var length = this.length;\n  var result = [];\n  for (; i < length; i++) {\n    cb(this[i], i, this) && result.push(this[i]);\n  }\n  return result;\n};\n\nliveCollectionProperties.cl_each = function(cb) {\n  slice.call(this).cl_each(cb);\n};\n\nliveCollectionProperties.cl_map = function(cb) {\n  return slice.call(this).cl_map(cb);\n};\n\nliveCollectionProperties.cl_filter = function(cb) {\n  return slice.call(this).cl_filter(cb);\n};\n\nliveCollectionProperties.cl_reduce = function(cb, memo) {\n  return slice.call(this).cl_reduce(cb, memo);\n};\n\nfunctionProperties.cl_bind = function(context) {\n  var self = this;\n  var args = slice.call(arguments, 1);\n  context = context || null;\n  return args.length\n    ? function() {\n        return arguments.length\n          ? self.apply(context, args.concat(slice.call(arguments)))\n          : self.apply(context, args);\n      }\n    : function() {\n        return arguments.length ? self.apply(context, arguments) : self.call(context);\n      };\n};\n\nobjectProperties.cl_each = function(cb) {\n  var i = 0;\n  var keys = Object.keys(this);\n  var length = keys.length;\n  for (; i < length; i++) {\n    cb(this[keys[i]], keys[i], this);\n  }\n};\n\nobjectProperties.cl_map = function(cb) {\n  var i = 0;\n  var keys = Object.keys(this);\n  var length = keys.length;\n  var result = Array(length);\n  for (; i < length; i++) {\n    result[i] = cb(this[keys[i]], keys[i], this);\n  }\n  return result;\n};\n\nobjectProperties.cl_reduce = function(cb, memo) {\n  var i = 0;\n  var keys = Object.keys(this);\n  var length = keys.length;\n  for (; i < length; i++) {\n    memo = cb(memo, this[keys[i]], keys[i], this);\n  }\n  return memo;\n};\n\nobjectProperties.cl_some = function(cb) {\n  var i = 0;\n  var keys = Object.keys(this);\n  var length = keys.length;\n  for (; i < length; i++) {\n    if (cb(this[keys[i]], keys[i], this)) {\n      return true;\n    }\n  }\n};\n\nobjectProperties.cl_extend = function(obj) {\n  if (obj) {\n    var i = 0;\n    var keys = Object.keys(obj);\n    var length = keys.length;\n    for (; i < length; i++) {\n      this[keys[i]] = obj[keys[i]];\n    }\n  }\n  return this;\n};\n\nfunction build(properties) {\n  return objectProperties.cl_reduce.call(\n    properties,\n    function(memo, value, key) {\n      memo[key] = {\n        value: value\n      };\n      return memo;\n    },\n    {}\n  );\n}\n\narrayProperties = build(arrayProperties);\nliveCollectionProperties = build(liveCollectionProperties);\nfunctionProperties = build(functionProperties);\nobjectProperties = build(objectProperties);\n\n/* eslint-disable no-extend-native */\nObject.defineProperties(Array.prototype, arrayProperties);\nObject.defineProperties(Int8Array.prototype, arrayProperties);\nObject.defineProperties(Uint8Array.prototype, arrayProperties);\nObject.defineProperties(Uint8ClampedArray.prototype, arrayProperties);\nObject.defineProperties(Int16Array.prototype, arrayProperties);\nObject.defineProperties(Uint16Array.prototype, arrayProperties);\nObject.defineProperties(Int32Array.prototype, arrayProperties);\nObject.defineProperties(Uint32Array.prototype, arrayProperties);\nObject.defineProperties(Float32Array.prototype, arrayProperties);\nObject.defineProperties(Float64Array.prototype, arrayProperties);\nObject.defineProperties(Function.prototype, functionProperties);\nObject.defineProperties(Object.prototype, objectProperties);\nif (typeof window !== \"undefined\") {\n  Object.defineProperties(HTMLCollection.prototype, liveCollectionProperties);\n  Object.defineProperties(NodeList.prototype, liveCollectionProperties);\n}\n","var DiffMatchPatch = require(\"diff-match-patch\");\n\nfunction cledit(contentElt) {\n  var editor = {\n    $contentElt: contentElt,\n    $window: window,\n    $keystrokes: []\n  };\n  editor.$document = editor.$window.document;\n  cledit.Utils.createEventHooks(editor);\n\n  editor.toggleEditable = function(isEditable) {\n    if (isEditable === undefined) {\n      isEditable = !contentElt.contentEditable;\n    }\n    contentElt.contentEditable = isEditable;\n  };\n  editor.toggleEditable(true);\n\n  function getTextContent() {\n    var textContent = contentElt.textContent.replace(/\\r[\\n\\u0085]?|[\\u2424\\u2028\\u0085]/g, \"\\n\"); // Markdown-it sanitization (Mac/DOS to Unix)\n    if (textContent.slice(-1) !== \"\\n\") {\n      textContent += \"\\n\";\n    }\n    return textContent;\n  }\n\n  var lastTextContent = getTextContent();\n  var highlighter = new cledit.Highlighter(editor);\n\n  var sectionList;\n\n  function parseSections(content, isInit) {\n    sectionList = highlighter.parseSections(content, isInit);\n\n    return sectionList;\n  }\n\n  // Used to detect editor changes\n  var watcher = new cledit.Watcher(editor, checkContentChange);\n  watcher.startWatching();\n\n  /* eslint-disable new-cap */\n  var diffMatchPatch = new DiffMatchPatch();\n  /* eslint-enable new-cap */\n  var selectionMgr = new cledit.SelectionMgr(editor);\n\n  function adjustCursorPosition(force) {\n    selectionMgr.saveSelectionState(true, true, force);\n  }\n\n  function replaceContent(selectionStart, selectionEnd, replacement) {\n    var min = Math.min(selectionStart, selectionEnd);\n    var max = Math.max(selectionStart, selectionEnd);\n    var range = selectionMgr.createRange(min, max);\n    var rangeText = \"\" + range;\n    // Range can contain a br element, which is not taken into account in rangeText\n    if (rangeText.length === max - min && rangeText === replacement) {\n      return;\n    }\n    range.deleteContents();\n    range.insertNode(editor.$document.createTextNode(replacement));\n    return range;\n  }\n\n  var ignoreUndo = false;\n\n  function setContent(value, noUndo, maxStartOffset) {\n    var textContent = getTextContent();\n    maxStartOffset =\n      maxStartOffset !== undefined && maxStartOffset < textContent.length\n        ? maxStartOffset\n        : textContent.length - 1;\n    var startOffset = Math.min(\n      diffMatchPatch.diff_commonPrefix(textContent, value),\n      maxStartOffset\n    );\n    var endOffset = Math.min(\n      diffMatchPatch.diff_commonSuffix(textContent, value),\n      textContent.length - startOffset,\n      value.length - startOffset\n    );\n    var replacement = value.substring(startOffset, value.length - endOffset);\n    var range = replaceContent(startOffset, textContent.length - endOffset, replacement);\n    if (range) {\n      ignoreUndo = noUndo;\n    }\n    return {\n      start: startOffset,\n      end: value.length - endOffset,\n      range: range\n    };\n  }\n\n  function replace(selectionStart, selectionEnd, replacement) {\n    replaceContent(selectionStart, selectionEnd, replacement);\n    var endOffset = selectionStart + replacement.length;\n    selectionMgr.setSelectionStartEnd(endOffset, endOffset);\n  }\n\n  function focus() {\n    selectionMgr.restoreSelection();\n  }\n\n  var undoMgr = new cledit.UndoMgr(editor);\n\n  function checkContentChange(mutations) {\n    watcher.noWatch(function() {\n      var removedSections = [];\n      var modifiedSections = [];\n\n      function markModifiedSection(node) {\n        while (node && node !== contentElt) {\n          if (node.section) {\n            var array = node.parentNode ? modifiedSections : removedSections;\n            return array.indexOf(node.section) === -1 && array.push(node.section);\n          }\n          node = node.parentNode;\n        }\n      }\n\n      mutations.cl_each(function(mutation) {\n        markModifiedSection(mutation.target);\n        mutation.addedNodes.cl_each(markModifiedSection);\n        mutation.removedNodes.cl_each(markModifiedSection);\n      });\n    });\n\n    var newTextContent = getTextContent();\n    var diffs = diffMatchPatch.diff_main(lastTextContent, newTextContent);\n\n    selectionMgr.saveSelectionState();\n    var sectionList = parseSections(newTextContent);\n    editor.$trigger(\"contentChanged\", newTextContent, diffs, sectionList);\n    if (!ignoreUndo) {\n      undoMgr.addDiffs(lastTextContent, newTextContent, diffs);\n      undoMgr.saveState();\n    }\n    ignoreUndo = false;\n    lastTextContent = newTextContent;\n  }\n\n  function setSelection(start, end) {\n    end = end === undefined ? start : end;\n    selectionMgr.setSelectionStartEnd(start, end);\n  }\n\n  function keydownHandler(handler) {\n    return function(evt) {\n      if (\n        evt.which !== 17 && // Ctrl\n        evt.which !== 91 && // Cmd\n        evt.which !== 18 && // Alt\n        evt.which !== 16 // Shift\n      ) {\n        handler(evt);\n      }\n    };\n  }\n\n  function tryDestroy() {\n    if (!editor.$window.document.contains(contentElt)) {\n      watcher.stopWatching();\n      editor.$window.removeEventListener(\"keydown\", windowKeydownListener);\n      editor.$window.removeEventListener(\"mousedown\", windowMouseListener);\n      editor.$window.removeEventListener(\"mouseup\", windowMouseListener);\n      editor.$trigger(\"destroy\");\n      return true;\n    }\n  }\n\n  // In case of Ctrl/Cmd+A outside the editor element\n  function windowKeydownListener(evt) {\n    if (!tryDestroy()) {\n      keydownHandler(function() {\n        adjustCursorPosition();\n      })(evt);\n    }\n  }\n  editor.$window.addEventListener(\"keydown\", windowKeydownListener, false);\n\n  // Mouseup can happen outside the editor element\n  function windowMouseListener() {\n    if (!tryDestroy()) {\n      selectionMgr.saveSelectionState(true, false);\n    }\n  }\n  editor.$window.addEventListener(\"mousedown\", windowMouseListener);\n  editor.$window.addEventListener(\"mouseup\", windowMouseListener);\n\n  // This can also provoke selection changes and does not fire mouseup event on Chrome/OSX\n  // contentElt.addEventListener('contextmenu', selectionMgr.saveSelectionState.cl_bind(selectionMgr, true, false))\n\n  contentElt.addEventListener(\n    \"keydown\",\n    keydownHandler(function(evt) {\n      selectionMgr.saveSelectionState();\n      adjustCursorPosition();\n\n      // Perform keystroke\n      var textContent = getTextContent();\n      var min = Math.min(selectionMgr.selectionStart, selectionMgr.selectionEnd);\n      var max = Math.max(selectionMgr.selectionStart, selectionMgr.selectionEnd);\n      var state = {\n        before: textContent.slice(0, min),\n        after: textContent.slice(max),\n        selection: textContent.slice(min, max),\n        isBackwardSelection: selectionMgr.selectionStart > selectionMgr.selectionEnd\n      };\n      editor.$keystrokes.cl_some(function(keystroke) {\n        if (keystroke.handler(evt, state, editor)) {\n          editor.setContent(state.before + state.selection + state.after, false, min);\n          min = state.before.length;\n          max = min + state.selection.length;\n          selectionMgr.setSelectionStartEnd(\n            state.isBackwardSelection ? max : min,\n            state.isBackwardSelection ? min : max\n          );\n          return true;\n        }\n      });\n    }),\n    false\n  );\n\n  contentElt.addEventListener(\n    \"paste\",\n    function(evt) {\n      evt.preventDefault();\n      var data;\n      var clipboardData = evt.clipboardData;\n      if (clipboardData) {\n        data = clipboardData.getData(\"text/plain\");\n      } else {\n        clipboardData = editor.$window.clipboardData;\n        data = clipboardData && clipboardData.getData(\"Text\");\n      }\n      if (!data) {\n        return;\n      }\n      replace(selectionMgr.selectionStart, selectionMgr.selectionEnd, data);\n      adjustCursorPosition();\n    },\n    false\n  );\n\n  contentElt.addEventListener(\n    \"cut\",\n    function() {\n      adjustCursorPosition();\n    },\n    false\n  );\n\n  contentElt.addEventListener(\n    \"focus\",\n    function() {\n      editor.$trigger(\"focus\");\n    },\n    false\n  );\n\n  contentElt.addEventListener(\n    \"blur\",\n    function() {\n      editor.$trigger(\"blur\");\n    },\n    false\n  );\n\n  function addKeystroke(keystrokes) {\n    if (!Array.isArray(keystrokes)) {\n      keystrokes = [keystrokes];\n    }\n    editor.$keystrokes = editor.$keystrokes\n      .concat(keystrokes)\n      .sort(function(keystroke1, keystroke2) {\n        return keystroke1.priority - keystroke2.priority;\n      });\n  }\n  addKeystroke(cledit.defaultKeystrokes);\n\n  editor.selectionMgr = selectionMgr;\n  editor.undoMgr = undoMgr;\n  editor.highlighter = highlighter;\n  editor.watcher = watcher;\n  editor.adjustCursorPosition = adjustCursorPosition;\n  editor.setContent = setContent;\n  editor.replace = replace;\n  editor.getContent = getTextContent;\n  editor.focus = focus;\n  editor.setSelection = setSelection;\n  editor.addKeystroke = addKeystroke;\n\n  editor.init = function(options) {\n    options = {\n      sectionHighlighter: function(section) {\n        return section.text\n          .replace(/&/g, \"&amp;\")\n          .replace(/</g, \"&lt;\")\n          .replace(/\\u00a0/g, \" \");\n      },\n      sectionDelimiter: \"\"\n    }.cl_extend(options || {});\n    editor.options = options;\n\n    if (options.content !== undefined) {\n      lastTextContent = options.content.toString();\n      if (lastTextContent.slice(-1) !== \"\\n\") {\n        lastTextContent += \"\\n\";\n      }\n    }\n\n    var sectionList = parseSections(lastTextContent, true);\n    editor.$trigger(\"contentChanged\", lastTextContent, [0, lastTextContent], sectionList);\n    if (options.selectionStart !== undefined && options.selectionEnd !== undefined) {\n      editor.setSelection(options.selectionStart, options.selectionEnd);\n    } else {\n      selectionMgr.saveSelectionState();\n    }\n    undoMgr.init(options);\n  };\n\n  return editor;\n}\n\nexport default cledit;\n","import cledit from \"./cleditCore\";\n\nvar styleElts = [];\n\nfunction createStyleSheet(document) {\n  var styleElt = document.createElement(\"style\");\n  styleElt.type = \"text/css\";\n  document.head.appendChild(styleElt);\n  styleElts.push(styleElt);\n}\n\nfunction Highlighter(editor) {\n  var self = this;\n  cledit.Utils.createEventHooks(this);\n\n  styleElts.cl_some(function(styleElt) {\n    return editor.$document.head.contains(styleElt);\n  }) || createStyleSheet(editor.$document);\n\n  var contentElt = editor.$contentElt;\n\n  var sectionList = [];\n  var insertBeforeSection;\n  var useBr = cledit.Utils.isWebkit;\n  var trailingNodeTag = \"div\";\n  var hiddenLfInnerHtml = '<br><span class=\"hd-lf\" style=\"display: none\">\\n</span>';\n\n  var lfHtml = '<span class=\"lf\">' + (useBr ? hiddenLfInnerHtml : \"\\n\") + \"</span>\";\n\n  this.addTrailingNode = function() {\n    this.trailingNode = editor.$document.createElement(trailingNodeTag);\n    contentElt.appendChild(this.trailingNode);\n  };\n\n  function Section(text) {\n    this.text = text.text === undefined ? text : text.text;\n    this.data = text.data;\n  }\n\n  Section.prototype.setElement = function(elt) {\n    this.elt = elt;\n    elt.section = this;\n  };\n\n  this.parseSections = function(content, isInit) {\n    var newSectionList = editor.options.sectionParser\n      ? editor.options.sectionParser(content)\n      : [content];\n\n    newSectionList = newSectionList.cl_map(function(sectionText) {\n      return new Section(sectionText);\n    });\n\n    var modifiedSections = [];\n    var sectionsToRemove = [];\n    insertBeforeSection = undefined;\n\n    if (isInit) {\n      // Render everything if isInit\n      sectionsToRemove = sectionList;\n      sectionList = newSectionList;\n      modifiedSections = newSectionList;\n    } else {\n      // Find modified section starting from top\n      var leftIndex = sectionList.length;\n      sectionList.cl_some(function(section, index) {\n        var newSection = newSectionList[index];\n        if (\n          index >= newSectionList.length ||\n          section.forceHighlighting ||\n          // Check text modification\n          section.text !== newSection.text ||\n          // Check that section has not been detached or moved\n          section.elt.parentNode !== contentElt ||\n          // Check also the content since nodes can be injected in sections via copy/paste\n          section.elt.textContent !== newSection.text\n        ) {\n          leftIndex = index;\n          return true;\n        }\n      });\n\n      // Find modified section starting from bottom\n      var rightIndex = -sectionList.length;\n      sectionList\n        .slice()\n        .reverse()\n        .cl_some(function(section, index) {\n          var newSection = newSectionList[newSectionList.length - index - 1];\n          if (\n            index >= newSectionList.length ||\n            section.forceHighlighting ||\n            // Check modified\n            section.text !== newSection.text ||\n            // Check that section has not been detached or moved\n            section.elt.parentNode !== contentElt ||\n            // Check also the content since nodes can be injected in sections via copy/paste\n            section.elt.textContent !== newSection.text\n          ) {\n            rightIndex = -index;\n            return true;\n          }\n        });\n\n      if (leftIndex - rightIndex > sectionList.length) {\n        // Prevent overlap\n        rightIndex = leftIndex - sectionList.length;\n      }\n\n      var leftSections = sectionList.slice(0, leftIndex);\n      modifiedSections = newSectionList.slice(leftIndex, newSectionList.length + rightIndex);\n      var rightSections = sectionList.slice(sectionList.length + rightIndex, sectionList.length);\n      insertBeforeSection = rightSections[0];\n      sectionsToRemove = sectionList.slice(leftIndex, sectionList.length + rightIndex);\n      sectionList = leftSections.concat(modifiedSections).concat(rightSections);\n    }\n\n    var newSectionEltList = editor.$document.createDocumentFragment();\n    modifiedSections.cl_each(function(section) {\n      section.forceHighlighting = false;\n      highlight(section);\n      newSectionEltList.appendChild(section.elt);\n    });\n    editor.watcher.noWatch(\n      function() {\n        if (isInit) {\n          contentElt.innerHTML = \"\";\n          contentElt.appendChild(newSectionEltList);\n          return this.addTrailingNode();\n        }\n\n        // Remove outdated sections\n        sectionsToRemove.cl_each(function(section) {\n          // section may be already removed\n          section.elt.parentNode === contentElt && contentElt.removeChild(section.elt);\n          // To detect sections that come back with built-in undo\n          section.elt.section = undefined;\n        });\n\n        if (insertBeforeSection !== undefined) {\n          contentElt.insertBefore(newSectionEltList, insertBeforeSection.elt);\n        } else {\n          contentElt.appendChild(newSectionEltList);\n        }\n\n        // Remove unauthorized nodes (text nodes outside of sections or duplicated sections via copy/paste)\n        var childNode = contentElt.firstChild;\n        while (childNode) {\n          var nextNode = childNode.nextSibling;\n          if (!childNode.section) {\n            contentElt.removeChild(childNode);\n          }\n          childNode = nextNode;\n        }\n        this.addTrailingNode();\n        self.$trigger(\"highlighted\");\n        if (editor.selectionMgr.hasFocus()) {\n          editor.selectionMgr.restoreSelection();\n        }\n      }.cl_bind(this)\n    );\n\n    return sectionList;\n  };\n\n  function highlight(section) {\n    var html = editor.options.sectionHighlighter(section).replace(/\\n/g, lfHtml);\n    var sectionElt = editor.$document.createElement(\"div\");\n\n    sectionElt.innerHTML = html;\n    section.setElement(sectionElt);\n    self.$trigger(\"sectionHighlighted\", section);\n  }\n}\n\ncledit.Highlighter = Highlighter;\n","//handle keycode\nimport cledit from './cleditCore';\n\nfunction Keystroke(handler, priority) {\n  this.handler = handler;\n  this.priority = priority || 100;\n}\n\ncledit.Keystroke = Keystroke;\n\nvar clearNewline;\nvar charTypes = Object.create(null);\n\n// Word separators, as in Sublime Text\n'./\\\\()\"\\'-:,.;<>~!@#$%^&*|+=[]{}`~?'.split('').cl_each(function(wordSeparator) {\n  charTypes[wordSeparator] = 'wordSeparator';\n});\ncharTypes[' '] = 'space';\ncharTypes['\\t'] = 'space';\ncharTypes['\\n'] = 'newLine';\n\nfunction getNextWordOffset(text, offset, isBackward) {\n  var previousType;\n  while ((isBackward && offset > 0) || (!isBackward && offset < text.length)) {\n    var currentType = charTypes[isBackward ? text[offset - 1] : text[offset]] || 'word';\n    if (previousType && currentType !== previousType) {\n      if (\n        previousType === 'word' ||\n        currentType === 'space' ||\n        previousType === 'newLine' ||\n        currentType === 'newLine'\n      ) {\n        break;\n      }\n    }\n    previousType = currentType;\n    isBackward ? offset-- : offset++;\n  }\n  return offset;\n}\n\ncledit.defaultKeystrokes = [\n  new Keystroke(function(evt, state, editor) {\n    if ((!evt.ctrlKey && !evt.metaKey) || evt.altKey) {\n      return;\n    }\n    var keyCode = evt.charCode || evt.keyCode;\n    var keyCodeChar = String.fromCharCode(keyCode).toLowerCase();\n    var action;\n    switch (keyCodeChar) {\n      case 'y':\n        action = 'redo';\n        break;\n      case 'z':\n        action = evt.shiftKey ? 'redo' : 'undo';\n        break;\n    }\n    if (action) {\n      evt.preventDefault();\n      setTimeout(function() {\n        editor.undoMgr[action]();\n      }, 10);\n      return true;\n    }\n  }),\n\n  new Keystroke(function(evt, state) {\n    if (evt.which !== 9 /* tab */ || evt.metaKey || evt.ctrlKey) {\n      return;\n    }\n\n    function strSplice(str, i, remove, add) {\n      remove = +remove || 0;\n      add = add || '';\n      return str.slice(0, i) + add + str.slice(i + remove);\n    }\n\n    evt.preventDefault();\n    var isInverse = evt.shiftKey;\n    var lf = state.before.lastIndexOf('\\n') + 1;\n    if (isInverse) {\n      if (/\\s/.test(state.before.charAt(lf))) {\n        state.before = strSplice(state.before, lf, 1);\n      }\n      state.selection = state.selection.replace(/^[ \\t]/gm, '');\n    } else {\n      if (state.selection) {\n        state.before = strSplice(state.before, lf, 0, '\\t');\n        state.selection = state.selection.replace(/\\n(?=[\\s\\S])/g, '\\n\\t');\n      } else {\n        state.before += '\\t';\n      }\n    }\n    return true;\n  }),\n\n  new Keystroke(function(evt, state, editor) {\n    if (evt.which !== 13 /* enter */) {\n      clearNewline = false;\n      return;\n    }\n\n    evt.preventDefault();\n    var lf = state.before.lastIndexOf('\\n') + 1;\n    if (clearNewline) {\n      state.before = state.before.substring(0, lf);\n      state.selection = '';\n      clearNewline = false;\n      return true;\n    }\n    clearNewline = false;\n    var previousLine = state.before.slice(lf);\n    var indent = previousLine.match(/^\\s*/)[0];\n    if (indent.length) {\n      clearNewline = true;\n    }\n\n    state.before += '\\n' + indent;\n    state.selection = '';\n    return true;\n  }),\n\n  new Keystroke(function(evt, state, editor) {\n    if (evt.which !== 8 /* backspace */ && evt.which !== 46 /* delete */) {\n      return;\n    }\n\n    if (!state.selection) {\n      var isJump = (cledit.Utils.isMac && evt.altKey) || (!cledit.Utils.isMac && evt.ctrlKey);\n      if (isJump) {\n        // Custom kill word behavior\n        var text = state.before + state.after;\n        var offset = getNextWordOffset(text, state.before.length, evt.which === 8);\n        if (evt.which === 8) {\n          state.before = state.before.slice(0, offset);\n        } else {\n          state.after = state.after.slice(offset - text.length);\n        }\n        evt.preventDefault();\n        return true;\n      } else if (evt.which === 8 && state.before.slice(-1) === '\\n') {\n        // Special treatment for end of lines\n        state.before = state.before.slice(0, -1);\n        evt.preventDefault();\n        return true;\n      } else if (evt.which === 46 && state.after.slice(0, 1) === '\\n') {\n        state.after = state.after.slice(1);\n        evt.preventDefault();\n        return true;\n      }\n    } else {\n      state.selection = '';\n      evt.preventDefault();\n      return true;\n    }\n  }),\n\n  new Keystroke(function(evt, state, editor) {\n    if (evt.which !== 37 /* left arrow */ && evt.which !== 39 /* right arrow */) {\n      return;\n    }\n    var isJump = (cledit.Utils.isMac && evt.altKey) || (!cledit.Utils.isMac && evt.ctrlKey);\n    if (!isJump) {\n      return;\n    }\n\n    // Custom jump behavior\n    var textContent = editor.getContent();\n    var offset = getNextWordOffset(textContent, editor.selectionMgr.selectionEnd, evt.which === 37);\n    if (evt.shiftKey) {\n      // rebuild the state completely\n      var min = Math.min(editor.selectionMgr.selectionStart, offset);\n      var max = Math.max(editor.selectionMgr.selectionStart, offset);\n      state.before = textContent.slice(0, min);\n      state.after = textContent.slice(max);\n      state.selection = textContent.slice(min, max);\n      state.isBackwardSelection = editor.selectionMgr.selectionStart > offset;\n    } else {\n      state.before = textContent.slice(0, offset);\n      state.after = textContent.slice(offset);\n      state.selection = '';\n    }\n    evt.preventDefault();\n    return true;\n  }),\n];\n","import cledit from './cleditCore';\n\nfunction SelectionMgr(editor) {\n  var contentElt = editor.$contentElt;\n  cledit.Utils.createEventHooks(this);\n\n  var self = this;\n  this.selectionStart = 0;\n  this.selectionEnd = 0;\n  this.cursorCoordinates = {};\n\n  this.findContainer = function(offset) {\n    var result = cledit.Utils.findContainer(contentElt, offset);\n    if (result.container.nodeValue === '\\n') {\n      var hdLfElt = result.container.parentNode;\n      if (\n        hdLfElt.className === 'hd-lf' &&\n        hdLfElt.previousSibling &&\n        hdLfElt.previousSibling.tagName === 'BR'\n      ) {\n        result.container = hdLfElt.parentNode;\n        result.offsetInContainer = Array.prototype.indexOf.call(\n          result.container.childNodes,\n          result.offsetInContainer === 0 ? hdLfElt.previousSibling : hdLfElt,\n        );\n      }\n    }\n    return result;\n  };\n\n  this.createRange = function(start, end) {\n    var range = editor.$document.createRange();\n    if (start === end) {\n      end = start = isNaN(start) ? start : this.findContainer(start < 0 ? 0 : start);\n    } else {\n      start = isNaN(start) ? start : this.findContainer(start < 0 ? 0 : start);\n      end = isNaN(end) ? end : this.findContainer(end < 0 ? 0 : end);\n    }\n    range.setStart(start.container, start.offsetInContainer);\n    range.setEnd(end.container, end.offsetInContainer);\n    return range;\n  };\n\n  this.hasFocus = function() {\n    return contentElt === editor.$document.activeElement;\n  };\n\n  this.restoreSelection = function() {\n    var min = Math.min(this.selectionStart, this.selectionEnd);\n    var max = Math.max(this.selectionStart, this.selectionEnd);\n    var selectionRange = this.createRange(min, max);\n    if (editor.$document.contains(selectionRange.commonAncestorContainer)) {\n      var selection = editor.$window.getSelection();\n      selection.removeAllRanges();\n      var isBackward = this.selectionStart > this.selectionEnd;\n      if (selection.extend) {\n        var beginRange = selectionRange.cloneRange();\n        beginRange.collapse(!isBackward);\n        selection.addRange(beginRange);\n        if (isBackward) {\n          selection.extend(selectionRange.startContainer, selectionRange.startOffset);\n        } else {\n          selection.extend(selectionRange.endContainer, selectionRange.endOffset);\n        }\n      }\n      return selectionRange;\n    }\n  };\n\n  function setSelection(start, end) {\n    if (start === undefined) {\n      start = self.selectionStart;\n    }\n    if (start < 0) {\n      start = 0;\n    }\n    if (end === undefined) {\n      end = this.selectionEnd;\n    }\n    if (end < 0) {\n      end = 0;\n    }\n    self.selectionStart = start;\n    self.selectionEnd = end;\n  }\n\n  this.setSelectionStartEnd = function(start, end) {\n    setSelection(start, end);\n    return this.hasFocus() && this.restoreSelection();\n  };\n\n  this.saveSelectionState = (function() {\n    function getClosestAncestorIn(node, ancestor, selfIsAncestor) {\n      var p;\n      var n = selfIsAncestor ? node : node.parentNode;\n      while (n) {\n        p = n.parentNode;\n        if (p === ancestor) {\n          return n;\n        }\n        n = p;\n      }\n      return null;\n    }\n\n    function getNodeIndex(node) {\n      var i = 0;\n      while ((node = node.previousSibling)) {\n        ++i;\n      }\n      return i;\n    }\n\n    function comparePoints(nodeA, offsetA, nodeB, offsetB) {\n      // See http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Comparing\n      var nodeC;\n      if (nodeA === nodeB) {\n        // Case 1: nodes are the same\n        return offsetA === offsetB ? 0 : offsetA < offsetB ? -1 : 1;\n      } else if ((nodeC = getClosestAncestorIn(nodeB, nodeA, true))) {\n        // Case 2: node C (container B or an ancestor) is a child node of A\n        return offsetA <= getNodeIndex(nodeC) ? -1 : 1;\n      } else if ((nodeC = getClosestAncestorIn(nodeA, nodeB, true))) {\n        // Case 3: node C (container A or an ancestor) is a child node of B\n        return getNodeIndex(nodeC) < offsetB ? -1 : 1;\n      }\n    }\n\n    function save() {\n      var result;\n      if (self.hasFocus()) {\n        var selectionStart = self.selectionStart;\n        var selectionEnd = self.selectionEnd;\n        var selection = editor.$window.getSelection();\n        if (selection.rangeCount > 0) {\n          var selectionRange = selection.getRangeAt(0);\n          var node = selectionRange.startContainer;\n          if (\n            contentElt.compareDocumentPosition(node) & window.Node.DOCUMENT_POSITION_CONTAINED_BY ||\n            contentElt === node\n          ) {\n            var offset = selectionRange.startOffset;\n            if (node.firstChild && offset > 0) {\n              node = node.childNodes[offset - 1];\n              offset = node.textContent.length;\n            }\n            var container = node;\n            while (node !== contentElt) {\n              while ((node = node.previousSibling)) {\n                offset += (node.textContent || '').length;\n              }\n              node = container = container.parentNode;\n            }\n            var selectionText = selectionRange + '';\n            // Fix end of line when only br is selected\n            var brElt = selectionRange.endContainer.firstChild;\n            if (brElt && brElt.tagName === 'BR' && selectionRange.endOffset === 1) {\n              selectionText += '\\n';\n            }\n\n            if (\n              comparePoints(\n                selection.anchorNode,\n                selection.anchorOffset,\n                selection.focusNode,\n                selection.focusOffset,\n              ) === 1\n            ) {\n              selectionStart = offset + selectionText.length;\n              selectionEnd = offset;\n            } else {\n              selectionStart = offset;\n              selectionEnd = offset + selectionText.length;\n            }\n\n            if (selectionStart === selectionEnd && selectionStart === editor.getContent().length) {\n              // If cursor is after the trailingNode\n              selectionStart = --selectionEnd;\n              result = self.setSelectionStartEnd(selectionStart, selectionEnd);\n            } else {\n              setSelection(selectionStart, selectionEnd);\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    return function() {\n      save();\n    };\n  })();\n}\n\ncledit.SelectionMgr = SelectionMgr;\n","import cledit from './cleditCore';\nvar DiffMatchPatch = require('diff-match-patch');\n\nfunction UndoMgr(editor) {\n  cledit.Utils.createEventHooks(this);\n\n  /* eslint-disable new-cap */\n  var diffMatchPatch = new DiffMatchPatch();\n  /* eslint-enable new-cap */\n\n  var self = this;\n  var selectionMgr;\n  var undoStack = [];\n  var redoStack = [];\n  var currentState;\n  var previousPatches = [];\n  var currentPatches = [];\n  var debounce = cledit.Utils.debounce;\n\n  self.options = {\n    undoStackMaxSize: 200,\n    bufferStateUntilIdle: 1000,\n    patchHandler: {\n      makePatches: function(oldContent, newContent, diffs) {\n        return diffMatchPatch.patch_make(oldContent, diffs);\n      },\n      applyPatches: function(patches, content) {\n        return diffMatchPatch.patch_apply(patches, content)[0];\n      },\n      reversePatches: function(patches) {\n        patches = diffMatchPatch.patch_deepCopy(patches).reverse();\n        patches.cl_each(function(patch) {\n          patch.diffs.cl_each(function(diff) {\n            diff[0] = -diff[0];\n          });\n        });\n        return patches;\n      },\n    },\n  };\n\n  function State() {}\n\n  function StateMgr() {\n    var currentTime, lastTime;\n\n    this.isBufferState = function() {\n      currentTime = Date.now();\n      return currentTime - lastTime < self.options.bufferStateUntilIdle;\n    };\n  }\n\n  function addToStack(stack) {\n    return function() {\n      stack.push(this);\n      this.patches = previousPatches;\n      previousPatches = [];\n    };\n  }\n\n  State.prototype.addToUndoStack = addToStack(undoStack);\n  State.prototype.addToRedoStack = addToStack(redoStack);\n\n  var stateMgr = new StateMgr();\n\n  this.addDiffs = function(oldContent, newContent, diffs) {\n    var patches = self.options.patchHandler.makePatches(oldContent, newContent, diffs);\n    currentPatches.push.apply(currentPatches, patches);\n  };\n\n  function saveCurrentPatches() {\n    // Move currentPatches into previousPatches\n    Array.prototype.push.apply(previousPatches, currentPatches);\n    currentPatches = [];\n  }\n\n  this.saveState = debounce(function() {\n    redoStack.length = 0;\n    if (!stateMgr.isBufferState()) {\n      currentState.addToUndoStack();\n\n      // Limit the size of the stack\n      while (undoStack.length > self.options.undoStackMaxSize) {\n        undoStack.shift();\n      }\n    }\n    saveCurrentPatches();\n    currentState = new State();\n    self.$trigger('undoStateChange');\n  });\n\n  function restoreState(patches, isForward) {\n    // Update editor\n    var content = editor.getContent();\n    if (!isForward) {\n      patches = self.options.patchHandler.reversePatches(patches);\n    }\n\n    var newContent = self.options.patchHandler.applyPatches(patches, content);\n    var newContentText = newContent.text || newContent;\n    var range = editor.setContent(newContentText, true);\n    var selection = newContent.selection || {\n      start: range.end,\n      end: range.end,\n    };\n\n    selectionMgr.setSelectionStartEnd(selection.start, selection.end);\n\n    self.$trigger('undoStateChange');\n    editor.adjustCursorPosition();\n  }\n\n  this.undo = function() {\n    var state = undoStack.pop();\n    if (!state) {\n      return;\n    }\n    saveCurrentPatches();\n    currentState.addToRedoStack();\n    restoreState(currentState.patches);\n    previousPatches = state.patches;\n    currentState = state;\n  };\n\n  this.redo = function() {\n    var state = redoStack.pop();\n    if (!state) {\n      return;\n    }\n    currentState.addToUndoStack();\n    restoreState(state.patches, true);\n    previousPatches = state.patches;\n    currentState = state;\n  };\n\n  this.init = function(options) {\n    self.options.cl_extend(options || {});\n    selectionMgr = editor.selectionMgr;\n    if (!currentState) {\n      currentState = new State();\n    }\n  };\n}\n\ncledit.UndoMgr = UndoMgr;\n","import cledit from './cleditCore'\n\nvar Utils = {\n  isGecko: 'MozAppearance' in document.documentElement.style,\n  isWebkit: 'WebkitAppearance' in document.documentElement.style,\n  isMsie: 'msTransform' in document.documentElement.style,\n  isMac: navigator.userAgent.indexOf('Mac OS X') !== -1\n}\n\n// Faster than setTimeout(0). Credit: https://github.com/stefanpenner/es6-promise\nUtils.defer = (function () {\n  var queue = new Array(1000)\n  var queueLength = 0\n  function flush() {\n    for (var i = 0; i < queueLength; i++) {\n      try {\n        queue[i]()\n      } catch (e) {\n        console.error(e.message, e.stack)\n      }\n      queue[i] = undefined\n    }\n    queueLength = 0\n  }\n\n  var iterations = 0\n  var observer = new window.MutationObserver(flush)\n  var node = document.createTextNode('')\n  observer.observe(node, { characterData: true })\n\n  return function (fn) {\n    queue[queueLength++] = fn\n    if (queueLength === 1) {\n      node.data = (iterations = ++iterations % 2)\n    }\n  }\n})()\n\nUtils.debounce = function (func, wait) {\n  var timeoutId, isExpected\n  return wait\n    ? function () {\n      clearTimeout(timeoutId)\n      timeoutId = setTimeout(func, wait)\n    }\n    : function () {\n      if (!isExpected) {\n        isExpected = true\n        Utils.defer(function () {\n          isExpected = false\n          func()\n        })\n      }\n    }\n}\n\nUtils.createEventHooks = function (object) {\n  var listenerMap = Object.create(null)\n  object.$trigger = function (eventType) {\n    var listeners = listenerMap[eventType]\n    if (listeners) {\n      var args = Array.prototype.slice.call(arguments, 1)\n      listeners.cl_each(function (listener) {\n        try {\n          listener.apply(object, args)\n        } catch (e) {\n          console.error(e.message, e.stack)\n        }\n      })\n    }\n  }\n  object.on = function (eventType, listener) {\n    var listeners = listenerMap[eventType]\n    if (!listeners) {\n      listeners = []\n      listenerMap[eventType] = listeners\n    }\n    listeners.push(listener)\n  }\n  object.off = function (eventType, listener) {\n    var listeners = listenerMap[eventType]\n    if (listeners) {\n      var index = listeners.indexOf(listener)\n      if (~index) {\n        listeners.splice(index, 1)\n      }\n    }\n  }\n}\n\nUtils.findContainer = function (elt, offset) {\n  var containerOffset = 0\n  var container\n  do {\n    container = elt\n    elt = elt.firstChild\n    if (elt) {\n      do {\n        var len = elt.textContent.length\n        if (containerOffset <= offset && containerOffset + len > offset) {\n          break\n        }\n        containerOffset += len\n      } while ((elt = elt.nextSibling))\n    }\n  } while (elt && elt.firstChild && elt.nodeType !== 3)\n\n  if (elt) {\n    return {\n      container: elt,\n      offsetInContainer: offset - containerOffset\n    }\n  }\n  while (container.lastChild) {\n    container = container.lastChild\n  }\n  return {\n    container: container,\n    offsetInContainer: container.nodeType === 3 ? container.textContent.length : 0\n  }\n}\n\ncledit.Utils = Utils\n","import cledit from './cleditCore'\n\nfunction Watcher(editor, listener) {\n  this.isWatching = false\n  var contentObserver\n  this.startWatching = function () {\n    this.stopWatching()\n    this.isWatching = true\n    contentObserver = new window.MutationObserver(listener)\n    contentObserver.observe(editor.$contentElt, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    })\n  }\n  this.stopWatching = function () {\n    if (contentObserver) {\n      contentObserver.disconnect()\n      contentObserver = undefined\n    }\n    this.isWatching = false\n  }\n  this.noWatch = function (cb) {\n    if (this.isWatching === true) {\n      this.stopWatching()\n      cb()\n      return this.startWatching()\n    }\n    cb()\n  }\n}\n\ncledit.Watcher = Watcher\n","import './clunderscore'\nimport cledit from './cleditCore'\nimport './cleditHighlighter'\nimport './cleditKeystroke'\nimport './cleditSelectionMgr'\nimport './cleditUndoMgr'\nimport './cleditUtils'\nimport './cleditWatcher'\n\nexport default cledit\n","import cledit from '../../libs/cledit'\n// import editorSvc from '../editorSvc'\n\n// 处理按下 enter、tab 键时的情况\n\nconst Keystroke = cledit.Keystroke\nconst indentRegexp = /^ {0,3}>[ ]*|^[ \\t]*[*+-][ \\t]|^([ \\t]*)\\d+\\.[ \\t]|^\\s+/;\nlet clearNewline, lastSelection\n\nfunction fixNumberedList(state, indent) {\n  if (state.selection || indent === undefined) return\n\n  const spaceIndent = indent.replace(/\\t/g, '    ')\n  const indentRegex = new RegExp(`^[ \\\\s]*$|^${spaceIndent}(\\\\d+\\\\.[ \\\\t])?(( )?.*)$`)\n\n  function getHits(lines) {\n    let hits = [], pendingHits = []\n\n    function flush() {\n      if (!pendingHits.hasHit && pendingHits.hasNoIndent) return false\n\n      hits = hits.concat(pendingHits)\n      pendingHits = []\n      return true\n    }\n\n    lines.some((line) => {\n      const match = line.replace(\n        /^[ \\t]*/, wholeMatch => wholeMatch.replace(/\\t/g, '    ')).match(indentRegex)\n      if (!match || line.match(/^#+ /)) { // Line not empty, not indented, or title\n        flush()\n        return true\n      }\n      pendingHits.push({ line, match })\n      if (match[2] !== undefined) {\n        if (match[1]) {\n          pendingHits.hasHit = true\n        } else if (!match[3]) {\n          pendingHits.hasNoIndent = true\n        }\n      } else if (!flush()) {\n        return true\n      }\n      return false\n    })\n    return hits\n  }\n\n  function formatHits(hits) {\n    let num\n    return hits.map((hit) => {\n      if (hit.match[1]) {\n        if (!num) num = parseInt(hit.match[1], 10)\n\n        const result = indent + num + hit.match[1].slice(-2) + hit.match[2]\n        num += 1\n        return result\n      }\n      return hit.line\n    })\n  }\n\n  const before = state.before.split('\\n')\n  before.unshift('') // Add an extra line (fixes #184)\n  const after = state.after.split('\\n')\n  let currentLine = before.pop() || ''\n  const currentPos = currentLine.length\n  currentLine += after.shift() || ''\n  let lines = before.concat(currentLine).concat(after)\n  let idx = before.length - getHits(before.slice().reverse()).length // Prevents starting from 0\n  while (idx <= before.length + 1) {\n    const hits = formatHits(getHits(lines.slice(idx)))\n    if (!hits.length) {\n      idx += 1\n    } else {\n      lines = lines.slice(0, idx).concat(hits).concat(lines.slice(idx + hits.length))\n      idx += hits.length\n    }\n  }\n  currentLine = lines[before.length]\n  state.before = lines.slice(1, before.length) // As we've added an extra line\n  state.before.push(currentLine.slice(0, currentPos))\n  state.before = state.before.join('\\n')\n  state.after = [currentLine.slice(currentPos)].concat(lines.slice(before.length + 1))\n  state.after = state.after.join('\\n')\n}\n\nfunction enterKeyHandler(evt, state) {\n  if (evt.which !== 13) { // Not enter\n    clearNewline = false\n    return false\n  }\n\n  evt.preventDefault()\n\n  // Get the last line before the selection\n  const lastLf = state.before.lastIndexOf('\\n') + 1\n  const lastLine = state.before.slice(lastLf)\n  // See if the line is indented\n  const indentMatch = lastLine.match(indentRegexp) || ['']\n  if (clearNewline && !state.selection && state.before.length === lastSelection) {\n    state.before = state.before.substring(0, lastLf)\n    state.selection = ''\n    clearNewline = false\n    fixNumberedList(state, indentMatch[1])\n    return true\n  }\n  clearNewline = false\n  const indent = indentMatch[0]\n  if (indent.length) clearNewline = true\n\n  state.before += `\\n${indent}`\n  state.selection = ''\n  lastSelection = state.before.length\n  fixNumberedList(state, indentMatch[1])\n  return true\n}\n\nfunction tabKeyHandler(evt, state) {\n  if (evt.which !== 9 || evt.metaKey || evt.ctrlKey) { // Not tab\n    return false\n  }\n\n  const strSplice = (str, i, remove, add) =>\n    str.slice(0, i) + (add || '') + str.slice(i + (+remove || 0))\n\n  evt.preventDefault()\n  const isInverse = evt.shiftKey\n  const lastLf = state.before.lastIndexOf('\\n') + 1\n  const lastLine = state.before.slice(lastLf)\n  const currentLine = lastLine + state.selection + state.after\n  const indentMatch = currentLine.match(indentRegexp)\n  if (isInverse) {\n    const previousChar = state.before.slice(-1)\n\n    if (/\\s/.test(state.before.charAt(lastLf))) {\n      state.before = strSplice(state.before, lastLf, 1)\n\n      if (indentMatch) {\n        fixNumberedList(state, indentMatch[1])\n\n        if (indentMatch[1]) {\n          fixNumberedList(state, indentMatch[1].slice(1))\n        }\n      }\n    }\n\n    const selection = previousChar + state.selection\n    state.selection = selection.replace(/\\n[ \\t]/gm, '\\n')\n\n    if (previousChar) {\n      state.selection = state.selection.slice(1)\n    }\n  } else if (\n    // If selection is not empty\n    state.selection\n    // Or we are in an indented paragraph and the cursor is over the indentation characters\n    || (indentMatch && indentMatch[0].length >= lastLine.length)\n  ) {\n    state.before = strSplice(state.before, lastLf, 0, '\\t')\n    state.selection = state.selection.replace(/\\n(?=.)/g, '\\n\\t')\n    if (indentMatch) {\n      fixNumberedList(state, indentMatch[1])\n      fixNumberedList(state, `\\t${indentMatch[1]}`)\n    }\n  } else {\n    state.before += '\\t'\n  }\n  return true\n}\n\n// editorSvc.$on('inited', () => {\n//   editorSvc.clEditor.addKeystroke(new Keystroke(enterKeyHandler, 50))\n//   editorSvc.clEditor.addKeystroke(new Keystroke(tabKeyHandler, 50))\n// })\n","// import './shortcuts';\nimport './keystrokes';\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const aHrefSanitizationWhitelist = /^\\s*(https?|ftp|mailto|tel|file):/;\nconst imgSrcSanitizationWhitelist = /^\\s*((https?|ftp|file|blob):|data:image\\/)/;\n\nconst urlParsingNode = window.document.createElement(\"a\");\n\nfunction sanitizeUri(uri, isImage) {\n  const regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;\n  urlParsingNode.setAttribute(\"href\", uri);\n  const normalizedVal = urlParsingNode.href;\n  if (normalizedVal !== \"\" && !normalizedVal.match(regex)) {\n    return `unsafe:${normalizedVal}`;\n  }\n  return uri;\n}\n\nexport default {\n  sanitizeUri\n};\n","import Prism from \"prismjs\";\nimport MarkdownIt from \"markdown-it\";\nimport extensionSvc from \"./extensionSvc\";\n\nconst htmlSectionMarker = \"\\uF111\\uF222\\uF333\\uF444\";\n\n// Create aliases for syntax highlighting\nconst languageAliases = {\n  js: \"javascript\",\n  json: \"javascript\",\n  html: \"markup\",\n  svg: \"markup\",\n  xml: \"markup\",\n  py: \"python\",\n  rb: \"ruby\",\n  yml: \"yaml\",\n  ps1: \"powershell\",\n  psm1: \"powershell\"\n};\n\nObject.entries(languageAliases).forEach(([alias, language]) => {\n  Prism.languages[alias] = Prism.languages[language];\n});\n\n// Add programming language parsing capability to markdown fences\nconst insideFences = {};\nObject.entries(Prism.languages).forEach(([name, language]) => {\n  if (Prism.util.type(language) === \"Object\") {\n    insideFences[`language-${name}`] = {\n      pattern: new RegExp(`(\\`\\`\\`|~~~)${name}\\\\W[\\\\s\\\\S]*`),\n      inside: {\n        \"cl cl-pre\": /(```|~~~).*/,\n        rest: language\n      }\n    };\n  }\n});\n\n// Disable spell checking in specific tokens\nconst noSpellcheckTokens = Object.create(null);\n[\n  \"code\",\n  \"pre\",\n  \"pre gfm\",\n  \"math block\",\n  \"math inline\",\n  \"math expr block\",\n  \"math expr inline\",\n  \"latex block\"\n].forEach(key => {\n  noSpellcheckTokens[key] = true;\n});\nPrism.hooks.add(\"wrap\", env => {\n  if (noSpellcheckTokens[env.type]) {\n    env.attributes.spellcheck = \"false\";\n  }\n});\n\nfunction createFlagMap(arr) {\n  return arr.reduce((map, type) => ({ ...map, [type]: true }), {});\n}\nconst startSectionBlockTypeMap = createFlagMap([\n  \"paragraph_open\",\n  \"blockquote_open\",\n  \"heading_open\",\n  \"code\",\n  \"fence\",\n  \"table_open\",\n  \"html_block\",\n  \"bullet_list_open\",\n  \"ordered_list_open\",\n  \"hr\",\n  \"dl_open\"\n]);\nconst listBlockTypeMap = createFlagMap([\"bullet_list_open\", \"ordered_list_open\"]);\nconst blockquoteBlockTypeMap = createFlagMap([\"blockquote_open\"]);\nconst tableBlockTypeMap = createFlagMap([\"table_open\"]);\nconst deflistBlockTypeMap = createFlagMap([\"dl_open\"]);\n\n// Default options for the markdown converter and the grammar\nconst defaultOptions = {\n  abbr: true,\n  breaks: true,\n  deflist: true,\n  del: true,\n  fence: true,\n  footnote: true,\n  linkify: true,\n  math: true,\n  sub: true,\n  sup: true,\n  table: true,\n  typographer: true,\n  insideFences\n};\n\nconst markdownConversionSvc = {\n  defaultOptions,\n\n  /**\n   * Creates a converter and init it with extensions.\n   * @returns {Object} A converter.\n   */\n  createConverter(options) {\n    if (Object.keys(options).length == 0) {\n      options = defaultOptions;\n    }\n    // Let the listeners add the rules\n    const converter = new MarkdownIt(\"zero\");\n    converter.core.ruler.enable([], true);\n    converter.block.ruler.enable([], true);\n    converter.inline.ruler.enable([], true);\n    extensionSvc.initConverter(converter, options);\n\n    Object.keys(startSectionBlockTypeMap).forEach(type => {\n      const rule = converter.renderer.rules[type] || converter.renderer.renderToken;\n      converter.renderer.rules[type] = (tokens, idx, opts, env, self) => {\n        if (tokens[idx].sectionDelimiter) {\n          // Add section delimiter\n          return htmlSectionMarker + rule.call(converter.renderer, tokens, idx, opts, env, self);\n        }\n        return rule.call(converter.renderer, tokens, idx, opts, env, self);\n      };\n    });\n    return converter;\n  },\n\n  /**\n   * Parse markdown sections by passing the 2 first block rules of the markdown-it converter.\n   * @param {Object} converter The markdown-it converter.\n   * @param {String} text The text to be parsed.\n   * @returns {Object} A parsing context to be passed to `convert`.\n   */\n  parseSections(converter, text) {\n    const markdownState = new converter.core.State(text, converter, {});\n    const markdownCoreRules = converter.core.ruler.getRules(\"\");\n    markdownCoreRules[0](markdownState); // Pass the normalize rule\n    markdownCoreRules[1](markdownState); // Pass the block rule\n    const lines = text.split(\"\\n\");\n    if (!lines[lines.length - 1]) {\n      // In cledit, last char is always '\\n'.\n      // Remove it as one will be added by addSection\n      lines.pop();\n    }\n    const parsingCtx = {\n      sections: [],\n      converter,\n      markdownState,\n      markdownCoreRules\n    };\n    let data = \"main\";\n    let i = 0;\n\n    function addSection(maxLine) {\n      const section = {\n        text: \"\",\n        data\n      };\n      for (; i < maxLine; i += 1) {\n        section.text += `${lines[i]}\\n`;\n      }\n      if (section) {\n        parsingCtx.sections.push(section);\n      }\n    }\n    markdownState.tokens.forEach((token, index) => {\n      // index === 0 means there are empty lines at the begining of the file\n      if (token.level === 0 && startSectionBlockTypeMap[token.type] === true) {\n        if (index > 0) {\n          token.sectionDelimiter = true;\n          addSection(token.map[0]);\n        }\n        if (listBlockTypeMap[token.type] === true) {\n          data = \"list\";\n        } else if (blockquoteBlockTypeMap[token.type] === true) {\n          data = \"blockquote\";\n        } else if (tableBlockTypeMap[token.type] === true) {\n          data = \"table\";\n        } else if (deflistBlockTypeMap[token.type] === true) {\n          data = \"deflist\";\n        } else {\n          data = \"main\";\n        }\n      }\n    });\n    addSection(lines.length);\n    return parsingCtx;\n  }\n};\n\nexport default markdownConversionSvc;\n","const charInsideUrl = \"(&|[-A-Z0-9+@#/%?=~_|[\\\\]()!:,.;])\";\nconst charEndingUrl = \"(&|[-A-Z0-9+@#/%=~_|[\\\\])])\";\nconst urlPattern = new RegExp(`(https?|ftp)(://${charInsideUrl}*${charEndingUrl})(?=$|\\\\W)`, \"gi\");\nconst emailPattern = /(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)/gi;\n\nconst markup = {\n  comment: /<!--[\\w\\W]*?-->/g,\n  tag: {\n    pattern: /<\\/?[\\w:-]+\\s*(?:\\s+[\\w:-]+(?:=(?:(\"|')(\\\\?[\\w\\W])*?\\1|[^\\s'\">=]+))?\\s*)*\\/?>/gi,\n    inside: {\n      tag: {\n        pattern: /^<\\/?[\\w:-]+/i,\n        inside: {\n          punctuation: /^<\\/?/,\n          namespace: /^[\\w-]+?:/\n        }\n      },\n      \"attr-value\": {\n        pattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/gi,\n        inside: {\n          punctuation: /=|>|\"/g\n        }\n      },\n      punctuation: /\\/?>/g,\n      \"attr-name\": {\n        pattern: /[\\w:-]+/g,\n        inside: {\n          namespace: /^[\\w-]+?:/\n        }\n      }\n    }\n  },\n  entity: /&#?[\\da-z]{1,8};/gi\n};\n\nconst latex = {\n  // A tex command e.g. \\foo\n  keyword: /\\\\(?:[^a-zA-Z]|[a-zA-Z]+)/g,\n  // Curly and square braces\n  lparen: /[[({]/g,\n  // Curly and square braces\n  rparen: /[\\])}]/g,\n  // A comment. Tex comments start with % and go to\n  // the end of the line\n  comment: /%.*/g\n};\n\nexport default {\n  makeGrammars(options) {\n    const grammars = {\n      main: {},\n      list: {},\n      blockquote: {},\n      table: {},\n      deflist: {}\n    };\n\n    grammars.deflist.deflist = {\n      pattern: new RegExp(\n        [\n          \"^ {0,3}\\\\S.*\\\\n\", // Description line\n          \"(?:[ \\\\t]*\\\\n)?\", // Optional empty line\n          \"(?:\",\n          \"[ \\\\t]*:[ \\\\t].*\\\\n\", // Colon line\n          \"(?:\",\n          \"(?:\",\n          \".*\\\\S.*\\\\n\", // Non-empty line\n          \"|\",\n          \"[ \\\\t]*\\\\n(?! ?\\\\S)\", // Or empty line not followed by unindented line\n          \")\",\n          \")*\",\n          \"(?:[ \\\\t]*\\\\n)*\", // Empty lines\n          \")+\"\n        ].join(\"\"),\n        \"m\"\n      ),\n      inside: {\n        term: /^.+/,\n        cl: /^[ \\t]*:[ \\t]/gm\n      }\n    };\n\n    const insideFences = options.insideFences || {};\n    insideFences[\"cl cl-pre\"] = /```|~~~/;\n    if (options.fence) {\n      grammars.main[\"pre gfm\"] = {\n        pattern: /^(```|~~~)[\\s\\S]*?\\n\\1 *$/gm,\n        inside: insideFences\n      };\n      grammars.list[\"pre gfm\"] = {\n        pattern: /^(?: {4}|\\t)(```|~~~)[\\s\\S]*?\\n(?: {4}|\\t)\\1\\s*$/gm,\n        inside: insideFences\n      };\n      grammars.deflist.deflist.inside[\"pre gfm\"] = grammars.list[\"pre gfm\"];\n    }\n\n    grammars.main[\"h1 alt\"] = {\n      pattern: /^.+\\n=+[ \\t]*$/gm,\n      inside: {\n        \"cl cl-hash\": /=+[ \\t]*$/\n      }\n    };\n    grammars.main[\"h2 alt\"] = {\n      pattern: /^.+\\n-+[ \\t]*$/gm,\n      inside: {\n        \"cl cl-hash\": /-+[ \\t]*$/\n      }\n    };\n    for (let i = 6; i >= 1; i -= 1) {\n      grammars.main[`h${i}`] = {\n        pattern: new RegExp(`^#{${i}}[ \\t].+$`, \"gm\"),\n        inside: {\n          \"cl cl-hash\": new RegExp(`^#{${i}}`)\n        }\n      };\n    }\n\n    const list = /^[ \\t]*([*+-]|\\d+\\.)[ \\t]/gm;\n    const blockquote = {\n      pattern: /^\\s*>.*(?:\\n[ \\t]*\\S.*)*/gm,\n      inside: {\n        \"cl cl-gt\": /^\\s*>/gm,\n        \"cl cl-li\": list\n      }\n    };\n    grammars.list.blockquote = blockquote;\n    grammars.blockquote.blockquote = blockquote;\n    grammars.deflist.deflist.inside.blockquote = blockquote;\n    grammars.list[\"cl cl-li\"] = list;\n    grammars.blockquote[\"cl cl-li\"] = list;\n    grammars.deflist.deflist.inside[\"cl cl-li\"] = list;\n\n    grammars.table.table = {\n      pattern: new RegExp(\n        [\n          \"^\\\\s*\\\\S.*[|].*\\\\n\", // Header Row\n          \"[-| :]+\\\\n\", // Separator\n          \"(?:.*[|].*\\\\n?)*\", // Table rows\n          \"$\"\n        ].join(\"\"),\n        \"gm\"\n      ),\n      inside: {\n        \"cl cl-title-separator\": /^[-| :]+$/gm,\n        \"cl cl-pipe\": /[|]/gm\n      }\n    };\n\n    grammars.main.hr = {\n      pattern: /^ {0,3}([*\\-_] *){3,}$/gm\n    };\n\n    const defs = {};\n    if (options.footnote) {\n      defs.fndef = {\n        pattern: /^ {0,3}\\[\\^.*?\\]:.*$/gm,\n        inside: {\n          \"ref-id\": {\n            pattern: /^ {0,3}\\[\\^.*?\\]/,\n            inside: {\n              cl: /(\\[\\^|\\])/\n            }\n          }\n        }\n      };\n    }\n    if (options.abbr) {\n      defs.abbrdef = {\n        pattern: /^ {0,3}\\*\\[.*?\\]:.*$/gm,\n        inside: {\n          \"abbr-id\": {\n            pattern: /^ {0,3}\\*\\[.*?\\]/,\n            inside: {\n              cl: /(\\*\\[|\\])/\n            }\n          }\n        }\n      };\n    }\n    defs.linkdef = {\n      pattern: /^ {0,3}\\[.*?\\]:.*$/gm,\n      inside: {\n        \"link-id\": {\n          pattern: /^ {0,3}\\[.*?\\]/,\n          inside: {\n            cl: /[[\\]]/\n          }\n        },\n        url: urlPattern\n      }\n    };\n\n    Object.entries(defs).forEach(([name, def]) => {\n      grammars.main[name] = def;\n      grammars.list[name] = def;\n      grammars.blockquote[name] = def;\n      grammars.table[name] = def;\n      grammars.deflist[name] = def;\n    });\n\n    grammars.main.pre = {\n      pattern: /^\\s*\\n(?: {4}|\\t).*\\S.*\\n((?: {4}|\\t).*\\n)*/gm\n    };\n\n    const rest = {};\n    rest.code = {\n      pattern: /(`+)[\\s\\S]*?\\1/g,\n      inside: {\n        \"cl cl-code\": /`/\n      }\n    };\n    if (options.math) {\n      rest[\"math block\"] = {\n        pattern: /\\\\\\\\\\[[\\s\\S]*?\\\\\\\\\\]/g,\n        inside: {\n          \"cl cl-bracket-start\": /^\\\\\\\\\\[/,\n          \"cl cl-bracket-end\": /\\\\\\\\\\]$/,\n          rest: latex\n        }\n      };\n      rest[\"math inline\"] = {\n        pattern: /\\\\\\\\\\([\\s\\S]*?\\\\\\\\\\)/g,\n        inside: {\n          \"cl cl-bracket-start\": /^\\\\\\\\\\(/,\n          \"cl cl-bracket-end\": /\\\\\\\\\\)$/,\n          rest: latex\n        }\n      };\n      rest[\"math expr block\"] = {\n        pattern: /(\\$\\$)[\\s\\S]*?\\1/g,\n        inside: {\n          \"cl cl-bracket-start\": /^\\$\\$/,\n          \"cl cl-bracket-end\": /\\$\\$$/,\n          rest: latex\n        }\n      };\n      rest[\"math expr inline\"] = {\n        pattern: /\\$(?!\\s)[\\s\\S]*?\\S\\$(?!\\d)/g,\n        inside: {\n          \"cl cl-bracket-start\": /^\\$/,\n          \"cl cl-bracket-end\": /\\$$/,\n          rest: latex\n        }\n      };\n    }\n    if (options.footnote) {\n      rest.inlinefn = {\n        pattern: /\\^\\[.+?\\]/g,\n        inside: {\n          cl: /(\\^\\[|\\])/\n        }\n      };\n      rest.fn = {\n        pattern: /\\[\\^.+?\\]/g,\n        inside: {\n          cl: /(\\[\\^|\\])/\n        }\n      };\n    }\n    rest.img = {\n      pattern: /!\\[.*?\\]\\(.+?\\)/g,\n      inside: {\n        \"cl cl-title\": /['‘][^'’]*['’]|[\"“][^\"”]*[\"”](?=\\)$)/,\n        \"cl cl-src\": {\n          pattern: /(\\]\\()[^('\" \\t]+(?=[)'\" \\t])/,\n          lookbehind: true\n        }\n      }\n    };\n    rest.link = {\n      pattern: /\\[.*?\\]\\(.+?\\)/gm,\n      inside: {\n        \"cl cl-underlined-text\": {\n          pattern: /(\\[)[^\\]]*/,\n          lookbehind: true\n        },\n        \"cl cl-title\": /['‘][^'’]*['’]|[\"“][^\"”]*[\"”](?=\\)$)/\n      }\n    };\n    rest.imgref = {\n      pattern: /!\\[.*?\\][ \\t]*\\[.*?\\]/g\n    };\n    rest.linkref = {\n      pattern: /\\[.*?\\][ \\t]*\\[.*?\\]/g,\n      inside: {\n        \"cl cl-underlined-text\": {\n          pattern: /^(\\[)[^\\]]*(?=\\][ \\t]*\\[)/,\n          lookbehind: true\n        }\n      }\n    };\n    rest.comment = markup.comment;\n    rest.tag = markup.tag;\n    rest.url = urlPattern;\n    rest.email = emailPattern;\n    rest.strong = {\n      pattern: /(^|[^\\w*])(__|\\*\\*)(?![_*])[\\s\\S]*?\\2(?=([^\\w*]|$))/gm,\n      lookbehind: true,\n      inside: {\n        \"cl cl-strong cl-start\": /^(__|\\*\\*)/,\n        \"cl cl-strong cl-close\": /(__|\\*\\*)$/\n      }\n    };\n    rest.em = {\n      pattern: /(^|[^\\w*])(_|\\*)(?![_*])[\\s\\S]*?\\2(?=([^\\w*]|$))/gm,\n      lookbehind: true,\n      inside: {\n        \"cl cl-em cl-start\": /^(_|\\*)/,\n        \"cl cl-em cl-close\": /(_|\\*)$/\n      }\n    };\n    rest[\"strong em\"] = {\n      pattern: /(^|[^\\w*])(__|\\*\\*)(_|\\*)(?![_*])[\\s\\S]*?\\3\\2(?=([^\\w*]|$))/gm,\n      lookbehind: true,\n      inside: {\n        \"cl cl-strong cl-start\": /^(__|\\*\\*)(_|\\*)/,\n        \"cl cl-strong cl-close\": /(_|\\*)(__|\\*\\*)$/\n      }\n    };\n    rest[\"strong em inv\"] = {\n      pattern: /(^|[^\\w*])(_|\\*)(__|\\*\\*)(?![_*])[\\s\\S]*?\\3\\2(?=([^\\w*]|$))/gm,\n      lookbehind: true,\n      inside: {\n        \"cl cl-strong cl-start\": /^(_|\\*)(__|\\*\\*)/,\n        \"cl cl-strong cl-close\": /(__|\\*\\*)(_|\\*)$/\n      }\n    };\n    if (options.del) {\n      rest.del = {\n        pattern: /(^|[^\\w*])(~~)[\\s\\S]*?\\2(?=([^\\w*]|$))/gm,\n        lookbehind: true,\n        inside: {\n          cl: /~~/,\n          \"cl-del-text\": /[^~]+/\n        }\n      };\n    }\n    if (options.sub) {\n      rest.sub = {\n        pattern: /(~)(?=\\S)(.*?\\S)\\1/gm,\n        inside: {\n          cl: /~/\n        }\n      };\n    }\n    if (options.sup) {\n      rest.sup = {\n        pattern: /(\\^)(?=\\S)(.*?\\S)\\1/gm,\n        inside: {\n          cl: /\\^/\n        }\n      };\n    }\n    rest.entity = markup.entity;\n\n    for (let c = 6; c >= 1; c -= 1) {\n      grammars.main[`h${c}`].inside.rest = rest;\n    }\n    grammars.main[\"h1 alt\"].inside.rest = rest;\n    grammars.main[\"h2 alt\"].inside.rest = rest;\n    grammars.table.table.inside.rest = rest;\n    grammars.main.rest = rest;\n    grammars.list.rest = rest;\n    grammars.blockquote.blockquote.inside.rest = rest;\n    grammars.deflist.deflist.inside.rest = rest;\n    if (options.footnote) {\n      grammars.main.fndef.inside.rest = rest;\n    }\n\n    const restLight = {\n      code: rest.code,\n      inlinefn: rest.inlinefn,\n      fn: rest.fn,\n      link: rest.link,\n      linkref: rest.linkref\n    };\n    rest.strong.inside.rest = restLight;\n    rest.em.inside.rest = restLight;\n    if (options.del) {\n      rest.del.inside.rest = restLight;\n    }\n\n    const inside = {\n      code: rest.code,\n      comment: rest.comment,\n      tag: rest.tag,\n      strong: rest.strong,\n      em: rest.em,\n      del: rest.del,\n      sub: rest.sub,\n      sup: rest.sup,\n      entity: markup.entity\n    };\n    rest.link.inside[\"cl cl-underlined-text\"].inside = inside;\n    rest.linkref.inside[\"cl cl-underlined-text\"].inside = inside;\n\n    // Wrap any other characters to allow paragraph folding\n    Object.entries(grammars).forEach(([, grammar]) => {\n      grammar.rest = grammar.rest || {};\n      grammar.rest.p = /.+/;\n    });\n\n    return grammars;\n  }\n};\n","import Prism from \"prismjs\";\nimport cledit from \"../libs/cledit\";\nimport htmlSanitizer from '../libs/htmlSanitizer';\nimport markdownConversionSvc from \"./markdownConversionSvc\";\nimport markdownGrammarSvc from \"./markdownGrammarSvc\";\nimport Vue from \"vue\";\n\nfunction editorSvcFun() {\n  return Object.assign(new Vue(), {\n    // Elements\n    editorElt: null,\n    // Other objects\n    clEditor: null,\n    options: null,\n    prismGrammars: null,\n    converter: null,\n    parsingCtx: null,\n    sectionList: null,\n    selectionRange: null,\n\n    /**\n     * Initialize the Prism grammar with the options\n     */\n    initPrism() {\n      const options = {\n        ...this.options,\n        ...markdownConversionSvc.defaultOptions\n      };\n      this.prismGrammars = markdownGrammarSvc.makeGrammars(options);\n    },\n\n    /**\n     * Initialize the markdown-it converter with the options\n     */\n    initConverter() {\n      this.converter = markdownConversionSvc.createConverter(this.options, true);\n    },\n\n    /**\n     * Initialize the cledit editor with markdown-it section parser and Prism highlighter\n     */\n    initClEditor() {\n      const options = {\n        sectionHighlighter: section => {\n          return Prism.highlight(section.text, this.prismGrammars[section.data]);\n        },\n        sectionParser: text => {\n          this.parsingCtx = markdownConversionSvc.parseSections(this.converter, text);\n          return this.parsingCtx.sections;\n        }\n      };\n      this.clEditor.init(options);\n    },\n\n    /**\n     * Pass the elements to the store and initialize the editor.\n     */\n    init(editorElt) {\n      this.editorElt = editorElt;\n\n      this.clEditor = cledit(editorElt);\n\n      this.clEditor.on(\"contentChanged\", sectionList => {\n        this.parsingCtx = {\n          ...this.parsingCtx,\n          sectionList\n        };\n      });\n\n      /* -----------------------------\n       * Inline images\n       */\n      this.clEditor.highlighter.on(\"sectionHighlighted\", section => {\n        section.elt.getElementsByClassName(\"token img\").cl_each(imgTokenElt => {\n          const srcElt = imgTokenElt.querySelector(\".token.cl-src\");\n          if (srcElt) {\n            // Create an img element before the .img.token and wrap both elements\n            // into a .token.img-wrapper\n            const imgElt = document.createElement(\"img\");\n            imgElt.style.display = \"none\";\n            const uri = srcElt.textContent;\n            if (!/^unsafe/.test(htmlSanitizer.sanitizeUri(uri, true))) {\n              imgElt.onload = () => {\n                imgElt.style.display = \"\";\n              };\n              imgElt.src = uri;\n              // Take img size into account\n              const sizeElt = imgTokenElt.querySelector(\".token.cl-size\");\n              if (sizeElt) {\n                const match = sizeElt.textContent.match(/=(\\d*)x(\\d*)/);\n                if (match[1]) {\n                  imgElt.width = parseInt(match[1], 10);\n                }\n                if (match[2]) {\n                  imgElt.height = parseInt(match[2], 10);\n                }\n              }\n            }\n            const imgTokenWrapper = document.createElement(\"span\");\n            imgTokenWrapper.className = \"token img-wrapper\";\n            imgTokenElt.parentNode.insertBefore(imgTokenWrapper, imgTokenElt);\n            imgTokenWrapper.appendChild(imgElt);\n            imgTokenWrapper.appendChild(imgTokenElt);\n          }\n        });\n      });\n\n      this.options = {};\n      this.initPrism();\n      this.initConverter();\n      this.initClEditor();\n      this.clEditor.toggleEditable(true);\n\n      this.$emit(\"inited\");\n    }\n  });\n}\n\nexport default editorSvcFun;\n","<template>\n  <div class=\"v-editor\">\n    <div class=\"ve-body\">\n      <div class=\"ve-editor\">\n        <pre\n          class=\"editor-inner markdown-highlighting\"\n          @keyup=\"handleInputChange\"\n          @focus=\"$emit('focus')\"\n          @blur=\"$emit('blur')\"\n        ></pre>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport './extensions';\nimport './services/optional';\nimport editorSvcFun from './services/editorSvc';\n\nexport default {\n  name: 'markdown-markup-input',\n\n  props: {\n    value: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data() {\n    return {\n      editorSvc: new editorSvcFun(),\n    };\n  },\n\n  methods: {\n    getContent() {\n      return this.editorSvc.clEditor.getContent();\n    },\n\n    setContent(text) {\n      this.editorSvc.clEditor.setContent(text);\n    },\n\n    handleInputChange(e) {\n      //esc,left,up,right,down key\n      if ([27, 37, 38, 39, 40].includes(e.keyCode)) return;\n      this.$emit('input', this.getContent());\n    },\n  },\n\n  watch: {\n    value() {\n      this.setContent(this.value || '');\n    },\n  },\n\n  mounted() {\n    const editorElt = this.$el.querySelector('.ve-editor .editor-inner');\n    this.editorSvc.init(editorElt);\n\n    this.setContent(this.value || '');\n  },\n};\n</script>\n<style type=\"text/less\" lang=\"less\">\n@import 'less/prism.css';\n@import 'less/style';\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=0a530cd8&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference' ] });\n};\n"],"sourceRoot":""}